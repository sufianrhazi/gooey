#!/usr/bin/env bash
set -e
cd "$(dirname "$0")/.."
# shellcheck disable=SC1091
source "s/_tools.sh"


VERSION=$(jq .version package.json)

STATUS_OUT=$(git status --porcelain | grep -v '^M  package.json$' | wc -l)
if [ "$STATUS_OUT" -gt 0 ]; then
    echo_error "ERROR: git state not clean, refusing to build"
    git status
    exit 1
fi

# Start from a clean slate
s/clean

echo_warn "rm -rf build/"
rm -rf build/

echo_info "Building types from tsc..."
node_modules/.bin/tsc -p .
echo_info "Bundling esm..."
node_modules/.bin/esbuild src/index.ts --define:DEBUG=false --define:LIB_VERSION="${VERSION}" --sourcemap --bundle --target=es2020 --format=esm --outdir=build/esm
echo_info "Bundling cjs..."
node_modules/.bin/esbuild src/index.ts --define:DEBUG=false --define:LIB_VERSION="${VERSION}" --sourcemap --bundle --target=es2020 --format=cjs --outfile=build/cjs/index.js
echo_info "Bundling iife..."
node_modules/.bin/esbuild src/index.ts --define:DEBUG=false --define:LIB_VERSION="${VERSION}" --sourcemap --bundle --target=es2020 --format=iife --global-name=Gooey --outfile=build/browser/index.js
echo_info "Bundling minified iife..."
node_modules/.bin/esbuild src/index.ts --define:DEBUG=false --define:LIB_VERSION="${VERSION}" --sourcemap --bundle --target=es2020 --format=iife --global-name=Gooey --minify --outfile=build/browser/index.min.js
git add .

echo_warn "Running tests + performance tests to confirm..."
s/test --perf

if [ "$1" != "--no-done" ]; then
    echo_good "All done"
fi
