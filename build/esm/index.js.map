{
  "version": 3,
  "sources": ["../../src/log.ts", "../../src/types.ts", "../../src/util.ts", "../../src/dag.ts", "../../src/debug.ts", "../../src/calc.ts", "../../src/jsx.ts", "../../src/vnode.ts", "../../src/view.ts", "../../src/collection.ts", "../../src/trackeddata.ts", "../../src/model.ts", "../../src/index.ts"],
  "sourcesContent": ["export type LogLevel = 'error' | 'warn' | 'info' | 'debug';\nconst levels: Record<LogLevel, number> = {\n    error: 0,\n    warn: 1,\n    info: 2,\n    debug: 3,\n};\nlet currentLevel: number = levels.warn;\n\nexport function getLogLevel(): LogLevel {\n    if (currentLevel >= levels.info) return 'info';\n    if (currentLevel >= levels.warn) return 'warn';\n    if (currentLevel >= levels.debug) return 'debug';\n    return 'error';\n}\nexport function setLogLevel(logLevel: LogLevel) {\n    invariant(() => logLevel in levels, logLevel);\n    currentLevel = levels[logLevel];\n}\n\nexport function debug(...items: any[]) {\n    if (currentLevel >= levels.debug) {\n        console.log(...items);\n    }\n}\n\nexport function info(...items: any[]) {\n    if (currentLevel >= levels.info) {\n        console.log(...items);\n    }\n}\n\nexport function warn(...items: any[]) {\n    if (currentLevel >= levels.warn) {\n        console.warn(...items);\n    }\n}\n\nexport function error(...items: any[]) {\n    if (currentLevel >= levels.error) {\n        console.error(...items);\n    }\n}\n\nexport function exception(exception: any, ...items: any[]) {\n    if (exception instanceof Error) {\n        error(exception);\n        error(...items);\n    } else {\n        error(exception, ...items);\n    }\n}\n\nexport function invariant(check: () => any, ...items: any[]) {\n    if (!check()) {\n        error('Invariant error', check.toString(), 'is not truthy', ...items);\n    }\n}\n\nexport function assert(check: any, ...items: any[]): asserts check {\n    if (!check) {\n        error(\n            'Assertion failure',\n            check === undefined\n                ? 'undefined'\n                : check === null\n                ? 'null'\n                : check.toString(),\n            'is not truthy',\n            ...items\n        );\n        throw new Error('Assertion failure');\n    }\n}\n\nexport function assertExhausted(context: never, ...items: any[]): never {\n    error('Assertion failure', context, 'is not exhausted', ...items);\n    throw new Error('Assertion failure');\n}\n", "export class InvariantError extends Error {}\n\nexport const TypeTag = Symbol('reviseType');\nexport const DataTypeTag = Symbol('dataTypeTag');\nconst CalculationTypeTag = Symbol('calculationType');\nexport const RecalculationTag = Symbol('recalculate');\n\nexport const ObserveKey = Symbol('observe');\nexport const MakeModelViewKey = Symbol('makeModelView');\nexport const FlushKey = Symbol('flush');\nexport const AddDeferredWorkKey = Symbol('addDeferredWork');\nexport const NotifyKey = Symbol('notify');\n\n/**\n * A ref object that can be passed to native elements.\n */\nexport type Ref<T> = {\n    [TypeTag]: 'ref';\n    current: T | undefined;\n};\nexport function isRef(ref: any): ref is Ref<unknown> {\n    return ref && ref[TypeTag] === 'ref';\n}\n\n/**\n * Make a ref object that can be passed to native elements.\n */\nexport function ref<T>(val?: T): Ref<T> {\n    return {\n        [TypeTag]: 'ref',\n        current: val,\n    };\n}\n\nexport type ModelEvent =\n    | {\n          type: 'add';\n          key: string | number | symbol;\n      }\n    | {\n          type: 'set';\n          key: string | number | symbol;\n          value: any;\n      }\n    | {\n          type: 'delete';\n          key: string | number | symbol;\n      };\nexport type ModelObserver = (event: ModelEvent) => void;\n\nexport type EqualityFunc<T> = (a: T, b: T) => boolean;\nexport type MappingFunction<T, V> = (item: T) => V;\nexport type FilterFunction<T> = (item: T) => boolean;\nexport type FlatMapFunction<T, V> = (item: T) => V[];\n\nexport interface ViewSpec<TInitialize, TItem, TEvent> {\n    /**\n     * Return initial items\n     */\n    initialize: (items: TInitialize) => TItem[];\n\n    /**\n     * Process subscription events\n     */\n    processEvent: (\n        view: Collection<TItem>,\n        event: TEvent,\n        initialValue: TItem[]\n    ) => void;\n}\n\nexport type CollectionEvent<T> =\n    | {\n          type: 'splice';\n          index: number;\n          count: number;\n          items: readonly T[];\n          removed: readonly T[];\n      }\n    | {\n          type: 'move';\n          fromIndex: number;\n          fromCount: number;\n          toIndex: number;\n          moved: readonly T[];\n      }\n    | {\n          type: 'sort';\n          indexes: readonly number[];\n      };\n\nexport type TrackedData<TImplementation, TTypeTag, TEvent> = TImplementation & {\n    [TypeTag]: 'data';\n    [DataTypeTag]: TTypeTag;\n    [FlushKey]: () => void;\n    [AddDeferredWorkKey]: (task: () => void) => void;\n    [ObserveKey]: (listener: (observer: TEvent) => void) => () => void;\n    [NotifyKey]: (event: TEvent) => void;\n};\n\n/**\n * A mutable object to hold state\n */\nexport type Model<T> = TrackedData<T, 'model', ModelEvent> & {\n    [MakeModelViewKey]: <V>(\n        modelViewSpec: ViewSpec<Readonly<T>, V, ModelEvent>,\n        debugName?: string\n    ) => View<V>;\n};\n\n/**\n * A mutable array to hold state, with some additional convenience methods\n */\nexport type Collection<T> = TrackedData<\n    Array<T>,\n    'collection',\n    CollectionEvent<T>\n> & {\n    makeView<V>(\n        viewSpec: ViewSpec<readonly T[], V, CollectionEvent<T>>,\n        debugName?: string\n    ): View<V>;\n    mapView<V>(mapFn: MappingFunction<T, V>, debugName?: string): View<V>;\n    filterView(filterFn: FilterFunction<T>, debugName?: string): View<T>;\n    flatMapView<V>(\n        flatMapFn: MappingFunction<T, V[]>,\n        debugName?: string\n    ): View<V>;\n    reject(shouldReject: (item: T, index: number) => boolean): void;\n    moveSlice(fromIndex: number, fromCount: number, toIndex: number): void;\n};\n\n/**\n * A readonly array to hold projected state\n */\nexport type View<T> = TrackedData<\n    ReadonlyArray<T>,\n    'collection',\n    CollectionEvent<T>\n> & {\n    makeView<V>(\n        viewSpec: ViewSpec<readonly T[], V, CollectionEvent<T>>,\n        debugName?: string\n    ): View<V>;\n    mapView<V>(mapFn: MappingFunction<T, V>, debugName?: string): View<V>;\n    filterView(filterFn: FilterFunction<T>, debugName?: string): View<T>;\n    flatMapView<V>(\n        flatMapFn: MappingFunction<T, V[]>,\n        debugName?: string\n    ): View<V>;\n};\n\nexport interface Subscription {\n    [TypeTag]: 'subscription';\n}\n\n/**\n * A key-value pair that is active for a subtree\n */\nexport interface Context<TValue> {\n    /**\n     * Note: although this function has a signature, it does not actually take arguments when called directly.\n     *\n     * This is solely present so that TypeScript can auto-complete the \"value\" prop of Contexts\n     */\n    (unusedOnlyForJsxTypeInferrence?: { value: TValue }): TValue;\n    [TypeTag]: 'context';\n}\n\nexport function createContext<TValue>(val: TValue): Context<TValue> {\n    return Object.assign(() => val, {\n        [TypeTag]: 'context' as const,\n    });\n}\n\nexport function isContext(val: any): val is Context<any> {\n    return !!(val && val[TypeTag] === 'context');\n}\n\n/**\n * A calculation cell that recalculates when dependencies change\n */\nexport type Calculation<Result> = (() => Result) & {\n    [TypeTag]: 'calculation';\n    [CalculationTypeTag]: 'calculation' | 'effect';\n    [RecalculationTag]: () => boolean;\n};\n\nexport interface ModelField {\n    model: {\n        [DataTypeTag]: any;\n    };\n    key: string | number | symbol;\n}\n\nexport function makeCalculation<Ret>(\n    fn: () => Ret,\n    recalcFn: () => boolean\n): Calculation<Ret> {\n    return Object.assign(fn, {\n        [TypeTag]: 'calculation' as const,\n        [CalculationTypeTag]: 'calculation' as const,\n        [RecalculationTag]: recalcFn,\n    });\n}\n\nexport function makeEffect(\n    fn: () => void,\n    recalcFn: () => boolean\n): Calculation<void> {\n    return Object.assign(fn, {\n        [TypeTag]: 'calculation' as const,\n        [CalculationTypeTag]: 'effect' as const,\n        [RecalculationTag]: recalcFn,\n    });\n}\n\nexport function isModel(thing: any): thing is Model<unknown> {\n    return !!(\n        thing &&\n        thing[TypeTag] === 'data' &&\n        thing[DataTypeTag] === 'model'\n    );\n}\n\nexport function isModelField(thing: any): thing is ModelField {\n    return !!(\n        thing &&\n        !thing[TypeTag] &&\n        !!thing.model &&\n        !!thing.model[DataTypeTag]\n    );\n}\n\nexport function isCollection(thing: any): thing is Collection<any> | View<any> {\n    return !!(\n        thing &&\n        thing[TypeTag] === 'data' &&\n        thing[DataTypeTag] === 'collection'\n    );\n}\n\nexport function isCalculation(thing: any): thing is Calculation<any> {\n    return !!(thing && thing[TypeTag] === 'calculation');\n}\n\nexport function isEffect(thing: Calculation<unknown>): boolean {\n    return thing[CalculationTypeTag] === 'effect';\n}\n\nexport function isSubscription(thing: any): thing is Subscription {\n    return !!(thing && thing[TypeTag] === 'subscription');\n}\n\nexport type DAGNode =\n    | Model<any>\n    | Collection<any>\n    | Calculation<any>\n    | ModelField\n    | View<any>\n    | Subscription;\n", "// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop = () => {};\n\nexport const sleep = (ms: number) =>\n    new Promise<void>((resolve) => setTimeout(() => resolve(), ms));\n\nexport function makePromise<T>(): {\n    promise: Promise<T>;\n    resolve: (val: T) => void;\n    reject: (val: T) => void;\n} {\n    let resolve: (val: T) => void = noop;\n    let reject: (val: T) => void = noop;\n    const promise = new Promise<T>((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n    return { promise, resolve, reject };\n}\n\nexport function groupBy<TItem, TKey, TVal>(\n    items: TItem[],\n    grouper: (item: TItem) => [TKey, TVal]\n): Map<TKey, TVal[]> {\n    const grouped: Map<TKey, TVal[]> = new Map();\n    items.forEach((item) => {\n        const [key, val] = grouper(item);\n        let inner = grouped.get(key);\n        if (!inner) {\n            inner = [];\n            grouped.set(key, inner);\n        }\n        inner.push(val);\n    });\n    return grouped;\n}\n\nexport function groupBy2<TItem, TOuterKey, TInnerKey, TVal>(\n    items: TItem[],\n    grouper: (item: TItem) => [TOuterKey, TInnerKey, TVal]\n) {\n    const grouped: Map<TOuterKey, Map<TInnerKey, TVal[]>> = new Map();\n    items.forEach((item) => {\n        const [outerKey, innerKey, val] = grouper(item);\n        let outer = grouped.get(outerKey);\n        if (!outer) {\n            outer = new Map();\n            grouped.set(outerKey, outer);\n        }\n        let inner = outer.get(innerKey);\n        if (!inner) {\n            inner = [];\n            outer.set(innerKey, inner);\n        }\n        inner.push(val);\n    });\n    return grouped;\n}\n\nexport function alwaysFalse(): boolean {\n    return false;\n}\n\nexport function strictEqual<T>(a: T, b: T): boolean {\n    return a === b;\n}\n", "import * as log from './log';\nimport { groupBy } from './util';\n\nexport class DAG<Type extends object> {\n    private nextId: number;\n    private idMap: WeakMap<Type, string>;\n    private nodesSet: Record<string, Type>;\n    private retained: Record<string, true>;\n    private dirtyNodes: Record<string, true>;\n\n    private graph: Record<string, Record<string, true>>;\n    private reverseGraph: Record<string, Record<string, true>>;\n\n    constructor() {\n        this.nextId = 1;\n        this.idMap = new WeakMap();\n        this.nodesSet = {};\n        this.retained = {};\n        this.graph = {};\n        this.reverseGraph = {};\n        this.dirtyNodes = {};\n    }\n\n    private getId(node: Type): string {\n        let id = this.idMap.get(node);\n        if (id === undefined) {\n            id = this.nextId.toString();\n            this.nextId += 1;\n            this.idMap.set(node, id);\n        }\n        return id;\n    }\n\n    addNode(node: Type): boolean {\n        const nodeId = this.getId(node);\n        if (this.nodesSet[nodeId]) return false;\n        this.graph[nodeId] = {};\n        this.reverseGraph[nodeId] = {};\n        this.nodesSet[nodeId] = node;\n        return true;\n    }\n\n    hasNode(node: Type): boolean {\n        return !!this.nodesSet[this.getId(node)];\n    }\n\n    markNodeDirty(node: Type): boolean {\n        const nodeId = this.getId(node);\n        if (this.dirtyNodes[nodeId]) return false;\n        this.dirtyNodes[nodeId] = true;\n        return true;\n    }\n\n    /**\n     * Indicate that toNode needs to be updated if fromNode has changed\n     *\n     * Returns true if edge is added\n     */\n    addEdge(fromNode: Type, toNode: Type): boolean {\n        const fromId = this.getId(fromNode);\n        const toId = this.getId(toNode);\n        log.assert(\n            !!this.nodesSet[fromId],\n            'cannot add edge from node that does not exist'\n        );\n        log.assert(\n            !!this.nodesSet[toId],\n            'cannot add edge to node that does not exist'\n        );\n        this.graph[fromId][toId] = true;\n        this.reverseGraph[toId][fromId] = true;\n        return true;\n    }\n\n    /**\n     * Returns true if edge is removed\n     */\n    removeEdge(fromNode: Type, toNode: Type): boolean {\n        const fromId = this.getId(fromNode);\n        const toId = this.getId(toNode);\n        if (!this.nodesSet[fromId]) return false;\n        if (!this.nodesSet[toId]) return false;\n        if (!this.graph[fromId][toId]) return false;\n        delete this.graph[fromId][toId];\n        delete this.reverseGraph[toId][fromId];\n        return true;\n    }\n\n    private removeNodeInner(nodeId: string) {\n        log.assert(\n            !this.retained[nodeId],\n            'attempted to remove a retained node'\n        ); // Is this right?\n        const toIds = Object.keys(this.graph[nodeId]);\n        const fromIds = Object.keys(this.reverseGraph[nodeId]);\n\n        // delete fromId -> nodeId for fromId in fromIds\n        fromIds.forEach((fromId) => {\n            delete this.graph[fromId][nodeId];\n        });\n        // delete nodeId -> toId for toId in toIds\n        toIds.forEach((toId) => {\n            delete this.reverseGraph[toId][nodeId];\n        });\n        delete this.reverseGraph[nodeId];\n        delete this.graph[nodeId];\n        delete this.nodesSet[nodeId];\n        delete this.dirtyNodes[nodeId];\n        delete this.retained[nodeId];\n    }\n\n    /**\n     * Remove a node and all its edges from the graph, returns true if node not present\n     */\n    removeNode(node: Type): boolean {\n        const nodeId = this.getId(node);\n        if (!this.nodesSet[nodeId]) return true;\n        this.removeNodeInner(nodeId);\n        return false;\n    }\n\n    retain(node: Type) {\n        const nodeId = this.getId(node);\n        log.assert(!this.retained[nodeId], 'double-retain');\n        this.retained[nodeId] = true;\n    }\n\n    release(node: Type) {\n        const nodeId = this.getId(node);\n        log.assert(this.retained[nodeId], 'double-release');\n        delete this.retained[nodeId];\n    }\n\n    removeIncoming(node: Type) {\n        const nodeId = this.getId(node);\n\n        const fromIds = Object.keys(this.reverseGraph[nodeId]);\n        fromIds.forEach((fromId) => {\n            delete this.graph[fromId][nodeId];\n        });\n        this.reverseGraph[nodeId] = {};\n    }\n\n    /**\n     * Get list of things need to be updated, when fromNode has changed?\n     */\n    getDependencies(fromNode: Type): Type[] {\n        const nodeId = this.getId(fromNode);\n        if (!this.graph[nodeId]) return [];\n        return Object.keys(this.graph[nodeId]).map(\n            (toId) => this.nodesSet[toId]\n        );\n    }\n\n    /**\n     * Visit dirty nodes topologically.\n     *\n     * When building topologically sorted list, refcount dirtiness (the number of incoming edges that are from dirty\n     * nodes).\n     *\n     * If a recalculation produces the same value, decrement the refcount on all destination edges.\n     *\n     * If a node while visiting topologically is at 0, no need to recalculate; decrement all of its destination nodes\n     * and proceed.\n     *\n     * This way we can prevent recalculations that are triggered if the calculation is \"equal\".\n     *\n     */\n    visitDirtyTopological(callback: (node: Type) => boolean) {\n        // Clear the current set of dirty nodes, retaining the ones visited.\n        const dirtyNodes = this.dirtyNodes;\n        this.dirtyNodes = {};\n\n        // Build topologically sorted list via DFS discoverable only from dirty nodes.\n        // After visiting all nodes, the list is in reverse topological order\n        const visited: Record<string, boolean> = {};\n        const sortedIds: string[] = [];\n        const dfsRecurse = (nodeId: string) => {\n            if (visited[nodeId]) return;\n            visited[nodeId] = true;\n            const toIds = Object.keys(this.graph[nodeId]);\n            toIds.forEach((toId) => {\n                dfsRecurse(toId);\n            });\n            sortedIds.push(nodeId);\n        };\n        Object.keys(dirtyNodes).forEach((nodeId) => {\n            dfsRecurse(nodeId);\n        });\n\n        // Visit the dirty nodes in topological order.\n        // If a node is not dirty, skip it.\n        // If a node is dirty and the visitor returns true, the node is considered \"not dirty\" and processing continues\n        // If a node is dirty and the visitor returns false, the node is considered \"dirty\" and all adjacent destination nodes are marked as dirty.\n        for (let i = sortedIds.length - 1; i >= 0; --i) {\n            const nodeId = sortedIds[i];\n            if (dirtyNodes[nodeId]) {\n                const node = this.nodesSet[nodeId];\n                const isEqual = callback(node);\n                if (!isEqual) {\n                    const toIds = Object.keys(this.graph[nodeId]);\n                    toIds.forEach((toId) => {\n                        dirtyNodes[toId] = true;\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * All nodes that do not lead to a retained (sink) node are considered garbage.\n     *\n     * Note: there may be a much more efficient way than doing this.\n     *\n     * It's possible that we could instead assert that a node is reachable from a retained node prior to calculation, which may be *much* faster in practice.\n     */\n    garbageCollect(): Type[] {\n        const marked: Partial<Record<string, true>> = {};\n\n        // Mark nodes reachable from retained sink nodes (in reverse: retained nodes are \"sink\" nodes)\n        const mark = (nodeId: string) => {\n            if (marked[nodeId]) return;\n            marked[nodeId] = true;\n            const fromIds = Object.keys(this.reverseGraph[nodeId]);\n            fromIds.forEach((fromId) => {\n                mark(fromId);\n            });\n        };\n        Object.keys(this.retained).forEach((nodeId) => {\n            mark(nodeId);\n        });\n\n        // Sweep\n        const removed: Type[] = [];\n        Object.keys(this.graph).forEach((nodeId) => {\n            if (!marked[nodeId]) {\n                removed.push(this.nodesSet[nodeId]);\n                this.removeNodeInner(nodeId);\n            }\n        });\n\n        return removed;\n    }\n\n    /**\n     * Generate a dot file structure of the graph\n     */\n    graphviz(\n        getAttributes: (\n            label: string,\n            item: Type\n        ) => { label: string; subgraph: object | undefined }\n    ) {\n        const lines = [\n            'digraph dag {',\n            'graph [rankdir=\"LR\"];',\n            'node [style=\"filled\", fillcolor=\"#DDDDDD\"];',\n        ];\n\n        const nodeIds = Object.keys(this.graph);\n        const nodeAttributes: Record<\n            string,\n            { label: string; subgraph: object | undefined }\n        > = {};\n        nodeIds.forEach((nodeId) => {\n            nodeAttributes[nodeId] = getAttributes(\n                nodeId,\n                this.nodesSet[nodeId]\n            );\n        });\n        const groupedNodes = groupBy(nodeIds, (nodeId) => {\n            return [nodeAttributes[nodeId].subgraph, nodeId];\n        });\n\n        let clusterId = 0;\n        groupedNodes.forEach((nodeIds, group) => {\n            if (group)\n                lines.push(\n                    `subgraph cluster_${clusterId++} {`,\n                    'style=\"filled\";',\n                    'color=\"#AAAAAA\";'\n                );\n            nodeIds.forEach((nodeId) => {\n                const props: Record<string, string> = {\n                    shape: this.retained[nodeId] ? 'box' : 'ellipse',\n                    label: nodeAttributes[nodeId].label,\n                };\n                lines.push(\n                    `  item_${nodeId} [${Object.entries(props)\n                        .map(\n                            ([key, value]) => `${key}=${JSON.stringify(value)}`\n                        )\n                        .join(',')}];`\n                );\n            });\n            if (group) lines.push('}');\n        });\n\n        nodeIds.forEach((fromId) => {\n            Object.keys(this.graph[fromId]).forEach((toId) => {\n                lines.push(`  item_${fromId} -> item_${toId};`);\n            });\n        });\n\n        lines.push('}');\n\n        return lines.join('\\n');\n    }\n}\n", "import {\n    DAGNode,\n    isCalculation,\n    isCollection,\n    isEffect,\n    isModel,\n    isSubscription,\n} from './types';\n\nlet nameMap: WeakMap<any, string> = new WeakMap();\n\nexport function clearNames() {\n    nameMap = new WeakMap();\n}\n\nexport function debugNameFor(item: DAGNode): string {\n    if (!DEBUG) {\n        return '';\n    }\n    if (isCollection(item)) {\n        return `collection:${nameMap.get(item) ?? '?'}`;\n    }\n    if (isCalculation(item)) {\n        return `${isEffect(item) ? 'effect' : 'calc'}:${\n            nameMap.get(item) ?? '?'\n        }`;\n    }\n    if (isModel(item)) {\n        return `model:${nameMap.get(item) ?? '?'}`;\n    }\n    if (isSubscription(item)) {\n        return `sub:${nameMap.get(item) ?? '?'}`;\n    }\n    return `field:${nameMap.get(item.model) ?? '?'}:${String(item.key)}`;\n}\n\nexport function name<T>(item: T, name: string): T {\n    if (!DEBUG) return item;\n    nameMap.set(item, name);\n    return item;\n}\n", "import {\n    InvariantError,\n    Calculation,\n    Collection,\n    View,\n    DAGNode,\n    FlushKey,\n    isCalculation,\n    isCollection,\n    isModel,\n    isModelField,\n    makeCalculation,\n    makeEffect,\n    EqualityFunc,\n    RecalculationTag,\n} from './types';\nimport * as log from './log';\nimport { DAG } from './dag';\nimport { noop, alwaysFalse, strictEqual } from './util';\nimport { clearNames, debugNameFor, name } from './debug';\n\nlet activeCalculations: (null | Calculation<any>)[] = [];\n\nlet globalDependencyGraph = new DAG<DAGNode>();\n\nlet refcountMap: WeakMap<\n    Calculation<any> | Collection<any> | View<any>,\n    number\n> = new WeakMap();\n\n/**\n * Reset all data to a clean slate.\n */\nexport function reset() {\n    activeCalculations = [];\n\n    globalDependencyGraph = new DAG();\n    refcountMap = new WeakMap();\n    clearNames();\n}\n\n/**\n * Create a calculation cell: while the provided function is executed, all dependencies are tracked.\n *\n * The provided function will be recalculated when any of those dependencies are changed. The result of this function is\n * treated as a dependency, so if recalculations change the result, any dependent calculations are recalculated.\n */\nexport function calc<Ret>(func: () => Ret): Calculation<Ret>;\nexport function calc<Ret>(func: () => Ret, debugName: string): Calculation<Ret>;\nexport function calc<Ret>(\n    func: () => Ret,\n    isEqual: EqualityFunc<Ret>\n): Calculation<Ret>;\nexport function calc<Ret>(\n    func: () => Ret,\n    isEqual: EqualityFunc<Ret>,\n    debugName: string\n): Calculation<Ret>;\nexport function calc<Ret>(\n    func: () => Ret,\n    isEqual?: string | EqualityFunc<Ret>,\n    debugName?: string\n): Calculation<Ret> {\n    if (typeof isEqual === 'string') debugName = isEqual;\n    if (typeof isEqual !== 'function') isEqual = strictEqual;\n    if (typeof debugName !== 'string') debugName = undefined;\n    const calculation = trackCalculation(func, isEqual, false);\n    if (debugName) name(calculation, debugName);\n    return calculation;\n}\n\n/**\n * Create an effect cell: while the provided function is executed, all dependencies are tracked.\n *\n * The provided function will be re-executed when any of those dependencies are changed.\n *\n * Effect cells are not be added as dependencies to the current computation.\n *\n * Note: Since nothing depends on created effects, they must be be manually retained and released if you want the effect\n * to re-run when its dependencies change. Failure to do so will not automatically re-run the effect (which may be\n * desired if you want to trigger behavior only once within a computation)\n */\nexport function effect(\n    func: () => void,\n    debugName?: string\n): Calculation<void> {\n    const calculation = trackCalculation(func, alwaysFalse, true);\n    if (debugName) name(calculation, debugName);\n    return calculation;\n}\n\nexport function untracked<TRet>(func: () => TRet): TRet {\n    activeCalculations.push(null);\n    const result = func();\n    activeCalculations.pop();\n    return result;\n}\n\nfunction trackCalculation<Ret>(\n    func: () => Ret,\n    isEqual: (a: Ret, b: Ret) => boolean,\n    isEffect: boolean\n): Calculation<Ret> {\n    if (typeof func !== 'function') {\n        throw new InvariantError('calculation must be provided a function');\n    }\n\n    let result: { result: Ret } | undefined = undefined;\n\n    // Note: typescript gets confused, this *should* be\n    // - Calculation<Ret> when isEffect is false and\n    // - Calculation<Ret> when isEffect is true, infering Ret to void\n    // But infers to Calculation<void> because makeEffect is present\n    const trackedCalculation: Calculation<Ret> = (\n        isEffect\n            ? makeEffect(runCalculation, recalculate)\n            : makeCalculation(runCalculation, recalculate)\n    ) as Calculation<Ret>;\n\n    function runCalculation() {\n        if (!isEffect) {\n            // effects return void, so they **cannot** have an effect on the current calculation\n            addDepToCurrentCalculation(trackedCalculation);\n        }\n\n        if (result) {\n            return result.result;\n        }\n\n        globalDependencyGraph.removeIncoming(trackedCalculation);\n\n        activeCalculations.push(trackedCalculation);\n        result = { result: func() };\n\n        const sanityCheck = activeCalculations.pop();\n        if (sanityCheck !== trackedCalculation) {\n            throw new InvariantError('Active calculation stack inconsistency!');\n        }\n        return result.result;\n    }\n    globalDependencyGraph.addNode(trackedCalculation);\n\n    function recalculate() {\n        if (!result) {\n            trackedCalculation();\n            return false;\n        }\n        const prevResult = result.result;\n        result = undefined;\n        const newResult = trackedCalculation();\n        const eq = isEqual(prevResult, newResult);\n        if (eq) {\n            // Ensure future invocations reuse original calculated value\n            result = { result: prevResult };\n        }\n        return eq;\n    }\n\n    return trackedCalculation;\n}\n\nexport function addDepToCurrentCalculation(item: DAGNode) {\n    const dependentCalculation =\n        activeCalculations[activeCalculations.length - 1];\n    if (dependentCalculation) {\n        globalDependencyGraph.addNode(item);\n        if (!globalDependencyGraph.hasNode(dependentCalculation)) {\n            globalDependencyGraph.addNode(dependentCalculation);\n        }\n        if (globalDependencyGraph.addEdge(item, dependentCalculation)) {\n            DEBUG &&\n                log.debug(\n                    'New global dependency',\n                    debugNameFor(item),\n                    '->',\n                    debugNameFor(dependentCalculation)\n                );\n        }\n    }\n}\n\nexport function addManualDep(fromNode: DAGNode, toNode: DAGNode) {\n    globalDependencyGraph.addNode(fromNode);\n    globalDependencyGraph.addNode(toNode);\n    if (globalDependencyGraph.addEdge(fromNode, toNode)) {\n        DEBUG &&\n            log.debug(\n                'New manual dependency',\n                debugNameFor(fromNode),\n                '->',\n                debugNameFor(toNode)\n            );\n    }\n}\n\nexport function removeManualDep(fromNode: DAGNode, toNode: DAGNode) {\n    if (globalDependencyGraph.removeEdge(fromNode, toNode)) {\n        DEBUG &&\n            log.debug(\n                'Removed manual dependency',\n                debugNameFor(fromNode),\n                '->',\n                debugNameFor(toNode)\n            );\n    }\n}\n\nexport function processChange(item: DAGNode) {\n    const newNode = globalDependencyGraph.addNode(item);\n    const marked = globalDependencyGraph.markNodeDirty(item);\n    DEBUG &&\n        log.debug(\n            'processChange',\n            item,\n            newNode ? 'new' : 'existing',\n            marked ? 'fresh' : 'stale'\n        );\n    if (!needsFlush) {\n        needsFlush = true;\n        notify();\n    }\n}\n\ntype Listener = () => void;\nlet needsFlush = false;\nlet flushPromise: Promise<void> = Promise.resolve();\nlet resolveFlushPromise: () => void = noop;\nlet subscribeListener: Listener = () => setTimeout(() => flush(), 0);\n\nexport function nextFlush() {\n    if (!needsFlush) return Promise.resolve();\n    return flushPromise;\n}\n\n/**\n * Call provided callback when any pending calculations are created. Use to configure how/when the application flushes calculations.\n *\n * If any pending calculations are needed when this function is called, the provided callback is called synchronously.\n *\n * By default, the subscribe mechanism is to call flush() on setTimeout. Calling subscribe removes this default and\n * replaces it with whatever mechanism you'd like.\n *\n * Example: subscribe(() => requestAnimationFrame(() => flush()));\n */\nexport function subscribe(listener: Listener): void {\n    subscribeListener = listener;\n    if (needsFlush) {\n        subscribeListener();\n    }\n}\n\nfunction notify() {\n    try {\n        flushPromise = new Promise((resolve) => {\n            resolveFlushPromise = resolve;\n        });\n        subscribeListener();\n    } catch (e) {\n        log.exception(e, 'uncaught exception in notify');\n    }\n}\n\n/**\n * Recalculate all pending calculations.\n */\nexport function flush() {\n    if (!needsFlush) {\n        return;\n    }\n    needsFlush = false;\n\n    // First, collect all the unreferenced nodes to avoid calculating stragglers\n    const removed = globalDependencyGraph.garbageCollect();\n    DEBUG &&\n        removed.forEach((item) => {\n            if (isCalculation(item)) {\n                log.debug('GC calculation', debugNameFor(item));\n            } else if (isCollection(item)) {\n                log.debug('GC collection', debugNameFor(item));\n            } else {\n                log.debug('GC model', debugNameFor(item));\n            }\n        });\n\n    // Then flush dependencies in topological order\n    globalDependencyGraph.visitDirtyTopological((item) => {\n        if (isCalculation(item)) {\n            DEBUG && log.debug('flushing calculation', debugNameFor(item));\n            const recalculation = item[RecalculationTag];\n            return recalculation();\n        } else if (isCollection(item)) {\n            DEBUG && log.debug('flushing collection', debugNameFor(item));\n            item[FlushKey]();\n        } else if (isModel(item)) {\n            DEBUG && log.debug('flushing model', debugNameFor(item));\n            item[FlushKey]();\n        } else {\n            DEBUG && log.debug('flushing other', debugNameFor(item));\n        }\n        return false;\n    });\n\n    resolveFlushPromise();\n}\n\n/**\n * Retain a calculation (increase the refcount)\n */\nexport function retain(item: DAGNode) {\n    const refcount = refcountMap.get(item) ?? 0;\n    const newRefcount = refcount + 1;\n    if (refcount === 0) {\n        DEBUG &&\n            log.debug(\n                `retain ${debugNameFor(\n                    item\n                )} retained; refcount ${refcount} -> ${newRefcount}`\n            );\n        if (!globalDependencyGraph.hasNode(item)) {\n            globalDependencyGraph.addNode(item);\n        }\n        globalDependencyGraph.retain(item);\n    } else {\n        DEBUG &&\n            log.debug(\n                `retain ${debugNameFor(\n                    item\n                )} incremented; refcount ${refcount} -> ${newRefcount}`\n            );\n    }\n    refcountMap.set(item, newRefcount);\n}\n\n/**\n * Release a calculation (decrease the refcount). If the refcount reaches zero, the calculation will be garbage\n * collected.\n */\nexport function release(item: DAGNode) {\n    const refcount = refcountMap.get(item) ?? 0;\n    const newRefcount = Math.min(refcount - 1, 0);\n    if (refcount < 1) {\n        log.error(\n            `release called on unretained item ${debugNameFor(item)}`,\n            item\n        );\n    }\n    if (newRefcount < 1) {\n        DEBUG &&\n            log.debug(\n                `release ${debugNameFor(\n                    item\n                )} released; refcount ${refcount} -> ${newRefcount}`\n            );\n        globalDependencyGraph.release(item);\n    } else {\n        DEBUG &&\n            log.debug(\n                `release ${debugNameFor(\n                    item\n                )} decremented; refcount ${refcount} -> ${newRefcount}`\n            );\n    }\n    refcountMap.set(item, newRefcount);\n}\n\n/**\n * Return a graphviz formatted directed graph\n */\nexport function debug(): string {\n    return globalDependencyGraph.graphviz((id, item) => {\n        let subgraph: object | undefined = undefined;\n        if (isModel(item)) {\n            subgraph = item;\n        }\n        if (isCollection(item)) {\n            subgraph = item;\n        }\n        if (isModelField(item)) {\n            subgraph = item.model;\n        }\n        return {\n            label: `${id}\\n${debugNameFor(item)}`,\n            subgraph,\n        };\n    });\n}\n", "import { TypeTag, Ref, Calculation, Collection, Context } from './types';\n\n// General component props\ntype PropsWithChildren<P> = P & { children?: JSXNode[] };\n\ntype OnUnmountCallback = () => void;\ntype OnMountCallback = () => void;\ntype EffectCallback = () => void;\n\ntype ComponentListeners = {\n    onUnmount: (callback: OnUnmountCallback) => void;\n    onMount: (callback: OnMountCallback) => void;\n    onEffect: (callback: EffectCallback) => void;\n    getContext: <TVal>(context: Context<TVal>) => TVal;\n};\nexport type Component<P extends {}> = (\n    props: PropsWithChildren<P>,\n    listeners: ComponentListeners\n) => JSXNode;\n\ntype JsxRawNode = string | number | boolean | null | undefined | Function;\n\n/**\n * The type returnable by JSX (raw nodes)\n */\ntype JSXNodeSingle =\n    | JsxRawNode\n    | Calculation<JsxRawNode>\n    | Calculation<JsxRawNode[]>\n    | RenderElement<any>\n    | RenderComponent<any>\n    | RenderProvider<any>;\nexport type JSXNode =\n    | JSXNodeSingle\n    | JSXNodeSingle[]\n    | Collection<JSXNodeSingle>;\n\nexport type RenderElement<ElementName extends keyof JSX.IntrinsicElements> = {\n    [TypeTag]: 'element';\n    element: ElementName;\n    props?: JSX.IntrinsicElements[ElementName];\n    children: JSXNode[];\n};\nexport function isRenderElement(\n    jsxNode: JSXNode\n): jsxNode is RenderElement<any> {\n    return !!(\n        jsxNode &&\n        typeof jsxNode === 'object' &&\n        !Array.isArray(jsxNode) &&\n        jsxNode[TypeTag] === 'element'\n    );\n}\n\nexport type RenderComponent<Props extends {}> = {\n    [TypeTag]: 'component';\n    component: Component<Props>;\n    props?: Props;\n    children: JSXNode[];\n};\nexport function isRenderComponent(\n    jsxNode: JSXNode\n): jsxNode is RenderComponent<any> {\n    return !!(\n        jsxNode &&\n        typeof jsxNode === 'object' &&\n        !Array.isArray(jsxNode) &&\n        jsxNode[TypeTag] === 'component'\n    );\n}\n\nexport type RenderProvider<TValue> = {\n    [TypeTag]: 'provider';\n    context: Context<TValue>;\n    value: TValue;\n    children: JSXNode[];\n};\n\nexport function isRenderProvider(\n    jsxNode: JSXNode\n): jsxNode is RenderProvider<any> {\n    return !!(\n        jsxNode &&\n        typeof jsxNode === 'object' &&\n        !Array.isArray(jsxNode) &&\n        jsxNode[TypeTag] === 'provider'\n    );\n}\n\n/*\n * Interfaces adopted from HTML Living Standard Last Updated 30 November 2021: https://html.spec.whatwg.org/\n */\nfunction attrIdentity<T>(val: T): T {\n    return val;\n}\nfunction attrBooleanToEmptyString(\n    val: boolean | undefined\n): string | undefined {\n    if (!val) return undefined;\n    return '';\n}\nfunction attrNumberToString(val: number | undefined): string | undefined {\n    if (val === undefined) return undefined;\n    return val.toString();\n}\nfunction attrStringOrNumberToString(\n    val: string | number | undefined\n): string | undefined {\n    if (val === undefined) return undefined;\n    return val.toString();\n}\nfunction attrStringOrNumberToNumber(\n    val: string | number | undefined\n): number | undefined {\n    if (val === undefined) return undefined;\n    return typeof val === 'number' ? val : parseInt(val);\n}\nfunction attrYesNo(val: '' | 'yes' | 'no' | undefined): boolean | undefined {\n    if (val === undefined) return undefined;\n    return val === 'no' ? false : true;\n}\nfunction attrStringArrayToWsString(\n    val: string[] | undefined\n): string | undefined {\n    if (val === undefined) return undefined;\n    if (val.length === 0) return undefined;\n    return val.join(' ');\n}\n\n// Note: TypeScript has some notably missing IDL properties from its HTMLElement interface, this adds them in lieu of those properties:\ninterface MissingFromTypescriptHTMLElementProperties {\n    // https://w3c.github.io/aria/#idl-reflection-attribute-values\n    ariaColIndexText?: string | undefined;\n    ariaInvalid?: string | undefined;\n    ariaRowIndexText?: string | undefined;\n    role?: string | undefined;\n\n    // https://html.spec.whatwg.org/multipage/dom.html#htmlorsvgelement\n    autofocus?: boolean | undefined;\n\n    itemscope?: string | undefined;\n}\n\n// Note: TypeScript has some notably missing IDL properties from its HTMLDialog interface, this adds them in lieu of those properties:\ninterface MissingFromTypescriptHTMLDialogElementProperties {\n    // https://html.spec.whatwg.org/multipage/interactive-elements.html#the-dialog-element\n    open?: boolean | undefined;\n}\n\ninterface MissingFromTypescriptHTMLIframeElementProperties {\n    // https://html.spec.whatwg.org/multipage/interactive-elements.html#the-dialog-element\n    loading?: LazyLoadingValue | undefined;\n}\n\ninterface MissingFromTypescriptHTMLMetaElementProperties {\n    // https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-media\n    media?: string | undefined;\n}\n\ninterface MissingFromTypescriptHTMLSourceElementProperties {\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#the-source-element\n    width?: number | undefined;\n    height?: number | undefined;\n}\n\ntype PropertyMapField<TJSXField, TElement, TIDLName extends keyof TElement> =\n    | {\n          makeAttrValue?: (\n              jsxAttr: Exclude<TJSXField, undefined>\n          ) => string | undefined;\n      }\n    | {\n          makeAttrValue?: (\n              jsxAttr: Exclude<TJSXField, undefined>\n          ) => string | undefined;\n          idlName: TIDLName;\n          makeIdlValue: (\n              jsxAttr: Exclude<TJSXField, undefined>\n          ) => TElement[TIDLName];\n      };\n\ntype PropertyMap<TJSXElementInterface, TElement> = {\n    [TJSXKey in keyof Required<TJSXElementInterface>]: PropertyMapField<\n        TJSXElementInterface[TJSXKey],\n        TElement,\n        keyof TElement\n    >;\n};\n\n// Note: abstract roles are **not** in this list, as \"Authors MUST NOT use abstract roles in content\"\ntype AriaRole =\n    | 'alert'\n    | 'alertdialog'\n    | 'application'\n    | 'article'\n    | 'associationlist'\n    | 'associationlistitemkey'\n    | 'associationlistitemvalue'\n    | 'banner'\n    | 'blockquote'\n    | 'button'\n    | 'caption'\n    | 'cell'\n    | 'checkbox'\n    | 'code'\n    | 'columnheader'\n    | 'combobox'\n    | 'comment'\n    | 'complementary'\n    | 'contentinfo'\n    | 'definition'\n    | 'deletion'\n    | 'dialog'\n    | 'directory'\n    | 'document'\n    | 'emphasis'\n    | 'feed'\n    | 'figure'\n    | 'form'\n    | 'generic'\n    | 'grid'\n    | 'gridcell'\n    | 'group'\n    | 'heading'\n    | 'img'\n    | 'insertion'\n    | 'link'\n    | 'list'\n    | 'listbox'\n    | 'listitem'\n    | 'log'\n    | 'main'\n    | 'mark'\n    | 'marquee'\n    | 'math'\n    | 'menu'\n    | 'menubar'\n    | 'menuitem'\n    | 'menuitemcheckbox'\n    | 'menuitemradio'\n    | 'meter'\n    | 'navigation'\n    | 'none'\n    | 'note'\n    | 'option'\n    | 'paragraph'\n    | 'presentation'\n    | 'progressbar'\n    | 'radio'\n    | 'radiogroup'\n    | 'region'\n    | 'row'\n    | 'rowgroup'\n    | 'rowheader'\n    | 'scrollbar'\n    | 'search'\n    | 'searchbox'\n    | 'separator'\n    | 'slider'\n    | 'spinbutton'\n    | 'status'\n    | 'strong'\n    | 'subscript'\n    | 'suggestion'\n    | 'superscript'\n    | 'switch'\n    | 'tab'\n    | 'table'\n    | 'tablist'\n    | 'tabpanel'\n    | 'term'\n    | 'textbox'\n    | 'time'\n    | 'timer'\n    | 'toolbar'\n    | 'tooltip'\n    | 'tree'\n    | 'treegrid'\n    | 'treeitem'\n    | string;\n\ntype DirValue = 'ltr' | 'rtl' | 'auto' | string;\n\ntype BrowsingContextValue = '_blank' | '_self' | '_parent' | '_top' | string;\n\ntype ReferrerPolicyValue =\n    | ''\n    | 'no-referrer'\n    | 'no-referrer-when-downgrade'\n    | 'same-origin'\n    | 'origin'\n    | 'strict-origin'\n    | 'origin-when-cross-origin'\n    | 'strict-origin-when-cross-origin'\n    | 'unsafe-url'\n    | string;\n\ntype CrossOriginValue = 'anonymous' | '' | 'use-credentials';\n\ntype LazyLoadingValue = 'lazy' | 'eager' | string;\n\ntype ImageDecodingHintValue = 'sync' | 'async' | 'auto' | string;\n\ntype SandboxValue =\n    | 'allow-forms'\n    | 'allow-modals'\n    | 'allow-orientation-lock'\n    | 'allow-pointer-lock'\n    | 'allow-popups'\n    | 'allow-popups-to-escape-sandbox'\n    | 'allow-presentation'\n    | 'allow-same-origin'\n    | 'allow-scripts'\n    | 'allow-top-navigation'\n    | 'allow-top-navigation-by-user-activation'\n    | 'allow-downloads'\n    | string;\n\ntype EncTypeValue =\n    | 'application/x-www-form-urlencoded'\n    | 'multipart/form-data'\n    | 'text/plain'\n    | string;\n\ntype FormMethodValue = 'get' | 'post' | 'dialog' | string;\n\ntype AutocompleteValue = 'on' | 'off' | string;\n\ninterface JSXElementInterface {\n    /** a guide for creating a keyboard shortcut that activates or focuses the element */\n    accesskey?: string | undefined;\n    'aria-atomic'?: string | undefined; //  ariaAtomic\n    'aria-autocomplete'?: string | undefined; //  ariaAutoComplete\n    'aria-busy'?: string | undefined; //  ariaBusy\n    'aria-checked'?: string | undefined; //  ariaChecked\n    'aria-colcount'?: string | undefined; //  ariaColCount\n    'aria-colindex'?: string | undefined; //  ariaColIndex\n    'aria-colindextext'?: string | undefined; //  ariaColIndexText\n    'aria-colspan'?: string | undefined; //  ariaColSpan\n    'aria-current'?: string | undefined; //  ariaCurrent\n    /*\n     * Note: omitting aria-description, as it is still in consideration for ARIA 2.0: https://www.w3.org/WAI/ARIA/track/issues/411\n    'aria-description'?: string | undefined; //  ariaDescription\n    */\n    'aria-disabled'?: string | undefined; //  ariaDisabled\n    'aria-expanded'?: string | undefined; //  ariaExpanded\n    'aria-haspopup'?: string | undefined; //  ariaHasPopup\n    'aria-hidden'?: string | undefined; //  ariaHidden\n    'aria-invalid'?: string | undefined; //  ariaInvalid\n    'aria-keyshortcuts'?: string | undefined; //  ariaKeyShortcuts\n    'aria-label'?: string | undefined; //  ariaLabel\n    'aria-level'?: string | undefined; //  ariaLevel\n    'aria-live'?: string | undefined; //  ariaLive\n    'aria-modal'?: string | undefined; //  ariaModal\n    'aria-multiline'?: string | undefined; //  ariaMultiLine\n    'aria-multiselectable'?: string | undefined; //  ariaMultiSelectable\n    'aria-orientation'?: string | undefined; //  ariaOrientation\n    'aria-placeholder'?: string | undefined; //  ariaPlaceholder\n    'aria-posinset'?: string | undefined; //  ariaPosInSet\n    'aria-pressed'?: string | undefined; //  ariaPressed\n    'aria-readonly'?: string | undefined; //  ariaReadOnly\n    'aria-required'?: string | undefined; //  ariaRequired\n    'aria-roledescription'?: string | undefined; //  ariaRoleDescription\n    'aria-rowcount'?: string | undefined; //  ariaRowCount\n    'aria-rowindex'?: string | undefined; //  ariaRowIndex\n    'aria-rowindextext'?: string | undefined; //  ariaRowIndexText\n    'aria-rowspan'?: string | undefined; //  ariaRowSpan\n    'aria-selected'?: string | undefined; //  ariaSelected\n    'aria-setsize'?: string | undefined; //  ariaSetSize\n    'aria-sort'?: string | undefined; //  ariaSort\n    'aria-valuemax'?: string | undefined; //  ariaValueMax\n    'aria-valuemin'?: string | undefined; //  ariaValueMin\n    'aria-valuenow'?: string | undefined; //  ariaValueNow\n    'aria-valuetext'?: string | undefined; //  ariaValueText\n    /** autocapitalization hint */\n    autocapitalize?:\n        | 'off'\n        | 'none'\n        | 'on'\n        | 'sentences'\n        | 'words'\n        | 'characters'\n        | string\n        | undefined;\n    /** focus as soon as the page is loaded or as soon as the dialog within which it finds itself is shown */\n    autofocus?: boolean | undefined;\n    /** the various classes that the element belongs to */\n    class?: string | undefined;\n    /** indicates if the element is editable */\n    contenteditable?: '' | 'true' | 'false' | string | undefined;\n    /** specifies the element's text directionality */\n    dir?: DirValue | undefined;\n    /** specifies the element's drag behavior */\n    draggable?: boolean | undefined;\n    /** specifies what action label (or icon) to present for the enter key on virtual keyboards */\n    enterkeyhint?:\n        | 'enter'\n        | 'done'\n        | 'go'\n        | 'next'\n        | 'previous'\n        | 'search'\n        | 'send'\n        | string\n        | undefined;\n    /** indicates that the element is not yet, or is no longer, directly relevant to the page's current state, or that it is being used to declare content to be reused by other parts of the page as opposed to being directly accessed by the user */\n    hidden?: boolean | undefined;\n    /** the unique id of the element */\n    id?: string | undefined;\n    inputmode?:\n        | 'none'\n        | 'text'\n        | 'tel'\n        | 'url'\n        | 'email'\n        | 'numeric'\n        | 'decimal'\n        | 'search'\n        | string\n        | undefined;\n    is?: string | undefined;\n    itemid?: string | undefined;\n    itemprop?: string | undefined;\n    itemref?: string | undefined;\n    itemscope?: boolean | undefined;\n    itemtype?: string | undefined;\n    lang?: string | undefined;\n    nonce?: string | undefined;\n    role?: AriaRole | undefined;\n    slot?: string | undefined;\n    spellcheck?: boolean | undefined;\n    style?: string | undefined;\n    tabindex?: -1 | 0 | number | undefined; // \"-1\" and \"0\" used as convenience\n    title?: string | undefined;\n    translate?: '' | 'yes' | 'no' | undefined;\n}\n\nexport const HTMLElementMap: PropertyMap<\n    JSXElementInterface,\n    HTMLElement & MissingFromTypescriptHTMLElementProperties\n> = {\n    accesskey: {\n        makeAttrValue: attrIdentity,\n        idlName: 'accessKey',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-atomic': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaAtomic',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-autocomplete': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaAutoComplete',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-busy': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaBusy',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-checked': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaChecked',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-colcount': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaColCount',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-colindex': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaColIndex',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-colindextext': {\n        makeAttrValue: attrIdentity,\n        // Note: ariaColIndexText is not present on TypeScript's Element AriaMixin IDL, despite being present in https://www.w3.org/TR/wai-aria-1.2/\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: Type '\"ariaColIndexText\"' is not assignable to type 'keyof HTMLElement'.\n        idlName: 'ariaColIndexText',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-colspan': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaColSpan',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-current': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaCurrent',\n        makeIdlValue: attrIdentity,\n    },\n    /*\n     * Note: omitting aria-description, as it is still in consideration for ARIA 2.0: https://www.w3.org/WAI/ARIA/track/issues/411\n    'aria-description': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaDescription',\n        makeIdlValue: attrIdentity,\n    },\n    */\n    'aria-disabled': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaDisabled',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-expanded': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaExpanded',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-haspopup': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaHasPopup',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-hidden': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaHidden',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-invalid': {\n        makeAttrValue: attrIdentity,\n        // Note: ariaColIndexText is not present on TypeScript's Element AriaMixin IDL, despite being present in https://www.w3.org/TR/wai-aria-1.2/\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: Type '\"ariaInvalid\"' is not assignable to type 'keyof HTMLElement'.\n        idlName: 'ariaInvalid',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-keyshortcuts': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaKeyShortcuts',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-label': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaLabel',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-level': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaLevel',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-live': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaLive',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-modal': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaModal',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-multiline': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaMultiLine',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-multiselectable': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaMultiSelectable',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-orientation': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaOrientation',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-placeholder': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaPlaceholder',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-posinset': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaPosInSet',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-pressed': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaPressed',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-readonly': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaReadOnly',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-required': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaRequired',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-roledescription': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaRoleDescription',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-rowcount': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaRowCount',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-rowindex': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaRowIndex',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-rowindextext': {\n        makeAttrValue: attrIdentity,\n        // Note: ariaColIndexText is not present on TypeScript's Element AriaMixin IDL, despite being present in https://www.w3.org/TR/wai-aria-1.2/\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: Type '\"ariaColIndexText\"' is not assignable to type 'keyof HTMLElement'.\n        idlName: 'ariaRowIndexText',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-rowspan': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaRowSpan',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-selected': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaSelected',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-setsize': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaSetSize',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-sort': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaSort',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-valuemax': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaValueMax',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-valuemin': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaValueMin',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-valuenow': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaValueNow',\n        makeIdlValue: attrIdentity,\n    },\n    'aria-valuetext': {\n        makeAttrValue: attrIdentity,\n        idlName: 'ariaValueText',\n        makeIdlValue: attrIdentity,\n    },\n    autocapitalize: {\n        makeAttrValue: attrIdentity,\n        idlName: 'autocapitalize',\n        makeIdlValue: attrIdentity,\n    },\n    autofocus: {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: Type '<T>(val: T) => T' is not assignable to type '((jsxAttr: boolean) => string | undefined) | ((jsxAttr: boolean) => string | undefined)'. Type '<T>(val: T) => T' is not assignable to type '(jsxAttr: boolean) => string | undefined'. Type 'boolean' is not assignable to type 'string | undefined'.\n        makeAttrValue: attrIdentity,\n        // Note: The \"autofocus\" property exists in HTMLElement interface: https://html.spec.whatwg.org/multipage/dom.html#htmlorsvgelement\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: Type '\"autofocus\"' is not assignable to type 'keyof HTMLElement'.\n        idlName: 'autofocus',\n        makeIdlValue: attrIdentity,\n    },\n    class: {\n        makeAttrValue: attrIdentity,\n        idlName: 'className',\n        makeIdlValue: attrIdentity,\n    },\n    contenteditable: {\n        makeAttrValue: attrIdentity,\n        idlName: 'contentEditable',\n        makeIdlValue: attrIdentity,\n    },\n    dir: {\n        makeAttrValue: attrIdentity,\n        idlName: 'dir',\n        makeIdlValue: attrIdentity,\n    },\n    draggable: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'draggable',\n        makeIdlValue: attrIdentity,\n    },\n    enterkeyhint: {\n        makeAttrValue: attrIdentity,\n        idlName: 'enterKeyHint',\n        makeIdlValue: attrIdentity,\n    },\n    hidden: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'hidden',\n        makeIdlValue: attrIdentity,\n    },\n    id: {\n        makeAttrValue: attrIdentity,\n        idlName: 'id',\n        makeIdlValue: attrIdentity,\n    },\n    inputmode: {\n        makeAttrValue: attrIdentity,\n        idlName: 'inputMode',\n        makeIdlValue: attrIdentity,\n    },\n    is: { makeAttrValue: attrIdentity },\n    itemid: { makeAttrValue: attrIdentity },\n    itemprop: { makeAttrValue: attrIdentity },\n    itemref: { makeAttrValue: attrIdentity },\n    itemscope: { makeAttrValue: attrBooleanToEmptyString },\n    itemtype: { makeAttrValue: attrIdentity },\n    lang: {\n        makeAttrValue: attrIdentity,\n        idlName: 'lang',\n        makeIdlValue: attrIdentity,\n    },\n    nonce: {\n        makeAttrValue: attrIdentity,\n        idlName: 'nonce',\n        makeIdlValue: attrIdentity,\n    },\n    role: {\n        makeAttrValue: attrIdentity,\n        // Note: role exists on all HTMLElements: https://w3c.github.io/aria/#idl-reflection-attribute-values\n        idlName: 'role',\n        makeIdlValue: attrIdentity,\n    },\n    slot: {\n        makeAttrValue: attrIdentity,\n        idlName: 'slot',\n        makeIdlValue: attrIdentity,\n    },\n    spellcheck: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'spellcheck',\n        makeIdlValue: attrIdentity,\n    },\n    style: {\n        makeAttrValue: attrIdentity,\n        idlName: 'style',\n        makeIdlValue: attrIdentity,\n    },\n    tabindex: {\n        makeAttrValue: attrStringOrNumberToString,\n        idlName: 'tabIndex',\n        makeIdlValue: attrStringOrNumberToNumber,\n    },\n    title: {\n        makeAttrValue: attrIdentity,\n        idlName: 'title',\n        makeIdlValue: attrIdentity,\n    },\n    translate: {\n        makeAttrValue: attrIdentity,\n        idlName: 'translate',\n        makeIdlValue: attrYesNo,\n    },\n};\n\ninterface JSXAnchorElementInterface extends JSXElementInterface {\n    /** Address of the hyperlink */\n    href?: string | undefined;\n    /** Browsing context for hyperlink navigation */\n    target?: BrowsingContextValue | undefined;\n    /** Whether to download the resource instead of navigating to it, and its filename if so */\n    download?: string | undefined;\n    /** URLs to ping */\n    ping?: string | undefined;\n    /** Relationship between the location in the document containing the hyperlink and the destination resource */\n    rel?: string | undefined;\n    /** Language of the linked resource */\n    hreflang?: string | undefined;\n    /** Hint for the type of the referenced resource */\n    type?: string | undefined;\n    /** Referrer policy for fetches initiated by the element */\n    referrerpolicy?: ReferrerPolicyValue | undefined;\n}\n\nconst HTMLAnchorElementMap: PropertyMap<\n    JSXAnchorElementInterface,\n    HTMLAnchorElement\n> = {\n    ...HTMLElementMap,\n    href: {\n        makeAttrValue: attrIdentity,\n        idlName: 'href',\n        makeIdlValue: attrIdentity,\n    },\n    target: {\n        makeAttrValue: attrIdentity,\n        idlName: 'target',\n        makeIdlValue: attrIdentity,\n    },\n    download: {\n        makeAttrValue: attrIdentity,\n        idlName: 'download',\n        makeIdlValue: attrIdentity,\n    },\n    ping: {\n        makeAttrValue: attrIdentity,\n        idlName: 'ping',\n        makeIdlValue: attrIdentity,\n    },\n    rel: {\n        makeAttrValue: attrIdentity,\n        idlName: 'rel',\n        makeIdlValue: attrIdentity,\n    },\n    hreflang: {\n        makeAttrValue: attrIdentity,\n        idlName: 'hreflang',\n        makeIdlValue: attrIdentity,\n    },\n    type: {\n        makeAttrValue: attrIdentity,\n        idlName: 'type',\n        makeIdlValue: attrIdentity,\n    },\n    referrerpolicy: {\n        makeAttrValue: attrIdentity,\n        idlName: 'referrerPolicy',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXAreaElementInterface extends JSXElementInterface {\n    alt?: string | undefined;\n    coords?: string | undefined;\n    shape?:\n        | 'circle'\n        | 'circ'\n        | 'default'\n        | 'poly'\n        | 'polygon'\n        | 'rect'\n        | 'rectangle'\n        | string\n        | undefined;\n    href?: string | undefined;\n    target?: BrowsingContextValue | undefined;\n    download?: string | undefined;\n    ping?: string | undefined;\n    rel?: string | undefined;\n    referrerpolicy?: ReferrerPolicyValue | undefined;\n}\n\nconst HTMLAreaElementMap: PropertyMap<\n    JSXAreaElementInterface,\n    HTMLAreaElement\n> = {\n    ...HTMLElementMap,\n    alt: {\n        makeAttrValue: attrIdentity,\n        idlName: 'alt',\n        makeIdlValue: attrIdentity,\n    },\n    coords: {\n        makeAttrValue: attrIdentity,\n        idlName: 'coords',\n        makeIdlValue: attrIdentity,\n    },\n    shape: {\n        makeAttrValue: attrIdentity,\n        idlName: 'shape',\n        makeIdlValue: attrIdentity,\n    },\n    href: {\n        makeAttrValue: attrIdentity,\n        idlName: 'href',\n        makeIdlValue: attrIdentity,\n    },\n    target: {\n        makeAttrValue: attrIdentity,\n        idlName: 'target',\n        makeIdlValue: attrIdentity,\n    },\n    download: {\n        makeAttrValue: attrIdentity,\n        idlName: 'download',\n        makeIdlValue: attrIdentity,\n    },\n    ping: {\n        makeAttrValue: attrIdentity,\n        idlName: 'ping',\n        makeIdlValue: attrIdentity,\n    },\n    rel: {\n        makeAttrValue: attrIdentity,\n        idlName: 'rel',\n        makeIdlValue: attrIdentity,\n    },\n    referrerpolicy: {\n        makeAttrValue: attrIdentity,\n        idlName: 'referrerPolicy',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXMediaElementInterface extends JSXElementInterface {\n    /** Address of the resource */\n    src?: string | undefined;\n    /** How the element handles crossorigin requests */\n    crossorigin?: CrossOriginValue | undefined;\n    /** Hints how much buffering the media resource will likely need */\n    preload?: 'none' | 'metadata' | 'auto' | undefined;\n    /** Hint that the media resource can be started automatically when the page is loaded */\n    autoplay?: boolean | undefined;\n    /** Whether to loop the media resource */\n    loop?: boolean | undefined;\n    /** Whether to mute the media resource by default */\n    muted?: boolean | undefined;\n    /** Show user agent controls */\n    controls?: boolean | undefined;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXAudioElementInterface extends JSXMediaElementInterface {}\n\nconst HTMLAudioElementMap: PropertyMap<\n    JSXAudioElementInterface,\n    HTMLAudioElement\n> = {\n    ...HTMLElementMap,\n    src: {\n        makeAttrValue: attrIdentity,\n        idlName: 'src',\n        makeIdlValue: attrIdentity,\n    },\n    crossorigin: {\n        makeAttrValue: attrIdentity,\n        idlName: 'crossOrigin',\n        makeIdlValue: attrIdentity,\n    },\n    preload: {\n        makeAttrValue: attrIdentity,\n        idlName: 'preload',\n        makeIdlValue: attrIdentity,\n    },\n    autoplay: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'autoplay',\n        makeIdlValue: attrIdentity,\n    },\n    loop: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'loop',\n        makeIdlValue: attrBooleanToEmptyString,\n    },\n    muted: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'muted',\n        makeIdlValue: attrIdentity,\n    },\n    controls: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'controls',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXBRElementInterface extends JSXElementInterface {}\n\nconst HTMLBRElementMap: PropertyMap<JSXBRElementInterface, HTMLBRElement> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXBaseElementInterface extends JSXElementInterface {\n    href?: string | undefined;\n    target?: BrowsingContextValue | undefined;\n}\n\nconst HTMLBaseElementMap: PropertyMap<\n    JSXBaseElementInterface,\n    HTMLBaseElement\n> = {\n    ...HTMLElementMap,\n    href: {\n        makeAttrValue: attrIdentity,\n        idlName: 'href',\n        makeIdlValue: attrIdentity,\n    },\n    target: {\n        makeAttrValue: attrIdentity,\n        idlName: 'target',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXBodyElementInterface extends JSXElementInterface {}\n\nconst HTMLBodyElementMap: PropertyMap<\n    JSXBodyElementInterface,\n    HTMLBodyElement\n> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXButtonElementInterface extends JSXElementInterface {\n    disabled?: boolean | undefined;\n    form?: string | undefined;\n    formaction?: string | undefined;\n    formenctype?: EncTypeValue | undefined;\n    formmethod?: FormMethodValue | undefined;\n    formnovalidate?: boolean | undefined;\n    formtarget?: BrowsingContextValue | undefined;\n    name?: string | undefined;\n    type?: 'submit' | 'reset' | 'button' | string | undefined;\n    value?: string | undefined;\n}\n\nconst HTMLButtonElementMap: PropertyMap<\n    JSXButtonElementInterface,\n    HTMLButtonElement\n> = {\n    ...HTMLElementMap,\n    disabled: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'disabled',\n        makeIdlValue: attrIdentity,\n    },\n    form: { makeAttrValue: attrIdentity }, // Note: form IDL not ever written\n    formaction: {\n        makeAttrValue: attrIdentity,\n        idlName: 'formAction',\n        makeIdlValue: attrIdentity,\n    },\n    formenctype: {\n        makeAttrValue: attrIdentity,\n        idlName: 'formEnctype',\n        makeIdlValue: attrIdentity,\n    },\n    formmethod: {\n        makeAttrValue: attrIdentity,\n        idlName: 'formMethod',\n        makeIdlValue: attrIdentity,\n    },\n    formnovalidate: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'formNoValidate',\n        makeIdlValue: attrIdentity,\n    },\n    formtarget: {\n        makeAttrValue: attrIdentity,\n        idlName: 'formTarget',\n        makeIdlValue: attrIdentity,\n    },\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n    type: {\n        makeAttrValue: attrIdentity,\n        idlName: 'type',\n        makeIdlValue: attrIdentity,\n    },\n    value: {\n        makeAttrValue: attrIdentity,\n        idlName: 'value',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXCanvasElementInterface extends JSXElementInterface {\n    width?: number | undefined;\n    height?: number | undefined;\n}\n\nconst HTMLCanvasElementMap: PropertyMap<\n    JSXCanvasElementInterface,\n    HTMLCanvasElement\n> = {\n    ...HTMLElementMap,\n    width: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'width',\n        makeIdlValue: attrIdentity,\n    },\n    height: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'height',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXDListElementInterface extends JSXElementInterface {}\n\nconst HTMLDListElementMap: PropertyMap<\n    JSXDListElementInterface,\n    HTMLDListElement\n> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXDataElementInterface extends JSXElementInterface {\n    value?: string | undefined;\n}\n\nconst HTMLDataElementMap: PropertyMap<\n    JSXDataElementInterface,\n    HTMLDataElement\n> = {\n    ...HTMLElementMap,\n    value: {\n        makeAttrValue: attrIdentity,\n        idlName: 'value',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXDataListElementInterface extends JSXElementInterface {}\n\nconst HTMLDataListElementMap: PropertyMap<\n    JSXDataListElementInterface,\n    HTMLDataListElement\n> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXDetailsElementInterface extends JSXElementInterface {\n    open?: boolean | undefined;\n}\n\nconst HTMLDetailsElementMap: PropertyMap<\n    JSXDetailsElementInterface,\n    HTMLDetailsElement\n> = {\n    ...HTMLElementMap,\n    open: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'open',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXDialogElementInterface extends JSXElementInterface {\n    open?: boolean | undefined;\n}\n\nconst HTMLDialogElementMap: PropertyMap<\n    JSXDialogElementInterface,\n    HTMLDialogElement & MissingFromTypescriptHTMLDialogElementProperties\n> = {\n    ...HTMLElementMap,\n    open: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'open',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXDivElementInterface extends JSXElementInterface {}\n\nconst HTMLDivElementMap: PropertyMap<JSXDivElementInterface, HTMLDivElement> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXEmbedElementInterface extends JSXElementInterface {\n    src?: string | undefined;\n    type?: string | undefined;\n    width?: number | undefined;\n    height?: number | undefined;\n}\n\nconst HTMLEmbedElementMap: PropertyMap<\n    JSXEmbedElementInterface,\n    HTMLEmbedElement\n> = {\n    ...HTMLElementMap,\n    src: {\n        makeAttrValue: attrIdentity,\n        idlName: 'src',\n        makeIdlValue: attrIdentity,\n    },\n    type: {\n        makeAttrValue: attrIdentity,\n        idlName: 'type',\n        makeIdlValue: attrIdentity,\n    },\n    width: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'width',\n        makeIdlValue: attrIdentity,\n    },\n    height: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'height',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXFieldSetElementInterface extends JSXElementInterface {\n    disabled?: boolean | undefined;\n    form?: string | undefined;\n    name?: string | undefined;\n}\n\nconst HTMLFieldSetElementMap: PropertyMap<\n    JSXFieldSetElementInterface,\n    HTMLFieldSetElement\n> = {\n    ...HTMLElementMap,\n    disabled: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'disabled',\n        makeIdlValue: attrIdentity,\n    },\n    form: { makeAttrValue: attrIdentity }, // form IDL not ever written\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXFormElementInterface extends JSXElementInterface {\n    'accept-charset'?: 'UTF-8' | string | undefined;\n    action?: string | undefined;\n    autocomplete?: AutocompleteValue | undefined;\n    enctype?: EncTypeValue | undefined;\n    method?: FormMethodValue | undefined;\n    name?: string | undefined;\n    novalidate?: boolean | undefined;\n    target?: BrowsingContextValue | undefined;\n    rel?: string | undefined;\n}\n\nconst HTMLFormElementMap: PropertyMap<\n    JSXFormElementInterface,\n    HTMLFormElement\n> = {\n    ...HTMLElementMap,\n    'accept-charset': {\n        makeAttrValue: attrIdentity,\n        idlName: 'acceptCharset',\n        makeIdlValue: attrIdentity,\n    },\n    action: {\n        makeAttrValue: attrIdentity,\n        idlName: 'action',\n        makeIdlValue: attrIdentity,\n    },\n    autocomplete: {\n        makeAttrValue: attrIdentity,\n        idlName: 'autocomplete',\n        makeIdlValue: attrIdentity,\n    },\n    enctype: {\n        makeAttrValue: attrIdentity,\n        idlName: 'enctype',\n        makeIdlValue: attrIdentity,\n    },\n    method: {\n        makeAttrValue: attrIdentity,\n        idlName: 'method',\n        makeIdlValue: attrIdentity,\n    },\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n    novalidate: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'noValidate',\n        makeIdlValue: attrIdentity,\n    },\n    target: {\n        makeAttrValue: attrIdentity,\n        idlName: 'target',\n        makeIdlValue: attrIdentity,\n    },\n    rel: {\n        makeAttrValue: attrIdentity,\n        idlName: 'rel',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXHeadingElementInterface extends JSXElementInterface {}\n\nconst HTMLHeadingElementMap: PropertyMap<\n    JSXHeadingElementInterface,\n    HTMLHeadingElement\n> = {\n    ...HTMLElementMap,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXHeadElementInterface extends JSXElementInterface {}\n\nconst HTMLHeadElementMap: PropertyMap<\n    JSXHeadElementInterface,\n    HTMLHeadElement\n> = {\n    ...HTMLElementMap,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXHRElementInterface extends JSXElementInterface {}\n\nconst HTMLHRElementMap: PropertyMap<JSXHRElementInterface, HTMLHRElement> = {\n    ...HTMLElementMap,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXHtmlElementInterface extends JSXElementInterface {}\n\nconst HTMLHtmlElementMap: PropertyMap<\n    JSXHtmlElementInterface,\n    HTMLHtmlElement\n> = {\n    ...HTMLElementMap,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXIFrameElementInterface extends JSXElementInterface {\n    /** Address of the resource */\n    src?: string | undefined;\n    /** A document to render in the iframe */\n    srcdoc?: string | undefined;\n    /** Name of nested browsing context */\n    name?: string | undefined;\n    /** Security rules for nested content */\n    sandbox?: SandboxValue[] | undefined; // TODO: make more of these tokenized items\n    /** Permissions policy to be applied to the iframe's contents */\n    allow?: string | undefined;\n    /** Whether to allow the iframe's contents to use requestFullscreen() */\n    allowfullscreen?: boolean | undefined;\n    /** Horizontal dimension */\n    width?: number | undefined;\n    /** Vertical dimension */\n    height?: number | undefined;\n    /** Referrer policy for fetches initiated by the element */\n    referrerpolicy?: ReferrerPolicyValue | undefined;\n    /** Used when determining loading deferral */\n    loading?: LazyLoadingValue | undefined;\n}\n\nconst HTMLIFrameElementMap: PropertyMap<\n    JSXIFrameElementInterface,\n    HTMLIFrameElement & MissingFromTypescriptHTMLIframeElementProperties\n> = {\n    ...HTMLElementMap,\n    src: {\n        makeAttrValue: attrIdentity,\n        idlName: 'src',\n        makeIdlValue: attrIdentity,\n    },\n    srcdoc: {\n        makeAttrValue: attrIdentity,\n        idlName: 'srcdoc',\n        makeIdlValue: attrIdentity,\n    },\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n    sandbox: {\n        makeAttrValue: attrStringArrayToWsString,\n        idlName: 'sandbox',\n        makeIdlValue: attrStringArrayToWsString,\n    },\n    allow: {\n        makeAttrValue: attrIdentity,\n        idlName: 'allow',\n        makeIdlValue: attrIdentity,\n    },\n    allowfullscreen: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'allowFullscreen',\n        makeIdlValue: attrIdentity,\n    },\n    width: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'width',\n        makeIdlValue: attrIdentity,\n    },\n    height: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'height',\n        makeIdlValue: attrIdentity,\n    },\n    referrerpolicy: {\n        makeAttrValue: attrIdentity,\n        idlName: 'referrerPolicy',\n        makeIdlValue: attrIdentity,\n    },\n    loading: {\n        makeAttrValue: attrIdentity,\n        idlName: 'loading',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXImageElementInterface extends JSXElementInterface {\n    /** Replacement text for use when images are not available */\n    alt?: string | undefined;\n    /** Address of the resource */\n    src?: string | undefined;\n    /** Images to use in different situations, e.g., high-resolution displays, small monitors, etc. */\n    srcset?: string | undefined;\n    /** Image sizes for different page layouts */\n    sizes?: string | undefined;\n    /** How the element handles crossorigin requests */\n    crossorigin?: CrossOriginValue | undefined;\n    /** Name of image map to use */\n    usemap?: string | undefined;\n    /** Whether the image is a server-side image map */\n    ismap?: boolean | undefined;\n    /** Horizontal dimension */\n    width?: number | undefined;\n    /** Vertical dimension */\n    height?: number | undefined;\n    /** Referrer policy for fetches initiated by the element */\n    referrerpolicy?: ReferrerPolicyValue | undefined;\n    /** Decoding hint to use when processing this image for presentation */\n    decoding?: ImageDecodingHintValue | undefined;\n    /** Used when determining loading deferral */\n    loading?: LazyLoadingValue | undefined;\n}\n\nconst HTMLImageElementMap: PropertyMap<\n    JSXImageElementInterface,\n    HTMLImageElement\n> = {\n    ...HTMLElementMap,\n    alt: {\n        makeAttrValue: attrIdentity,\n        idlName: 'alt',\n        makeIdlValue: attrIdentity,\n    },\n    src: {\n        makeAttrValue: attrIdentity,\n        idlName: 'src',\n        makeIdlValue: attrIdentity,\n    },\n    srcset: {\n        makeAttrValue: attrIdentity,\n        idlName: 'srcset',\n        makeIdlValue: attrIdentity,\n    },\n    sizes: {\n        makeAttrValue: attrIdentity,\n        idlName: 'sizes',\n        makeIdlValue: attrIdentity,\n    },\n    crossorigin: {\n        makeAttrValue: attrIdentity,\n        idlName: 'crossOrigin',\n        makeIdlValue: attrIdentity,\n    },\n    usemap: {\n        makeAttrValue: attrIdentity,\n        idlName: 'useMap',\n        makeIdlValue: attrIdentity,\n    },\n    ismap: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'isMap',\n        makeIdlValue: attrIdentity,\n    },\n    width: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'width',\n        makeIdlValue: attrIdentity,\n    },\n    height: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'height',\n        makeIdlValue: attrIdentity,\n    },\n    referrerpolicy: {\n        makeAttrValue: attrIdentity,\n        idlName: 'referrerPolicy',\n        makeIdlValue: attrIdentity,\n    },\n    decoding: {\n        makeAttrValue: attrIdentity,\n        idlName: 'decoding',\n        makeIdlValue: attrIdentity,\n    },\n    loading: {\n        makeAttrValue: attrIdentity,\n        idlName: 'loading',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ntype FormInputTypeValues =\n    | 'button'\n    | 'checkbox'\n    | 'color'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'file'\n    | 'hidden'\n    | 'image'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'radio'\n    | 'range'\n    | 'reset'\n    | 'search'\n    | 'submit'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week'\n    | string;\n\ninterface JSXInputElementInterface extends JSXElementInterface {\n    /** Hint for expected file type in file upload controls */\n    accept?: string | undefined;\n    /** Replacement text for use when images are not available */\n    alt?: string | undefined;\n    /** Hint for form autofill feature */\n    autocomplete?: AutocompleteValue | undefined;\n    /** Whether the control is checked */\n    checked?: boolean | undefined;\n    /** Name of form control to use for sending the element's directionality in form submission */\n    dirname?: string | undefined;\n    /** Whether the form control is disabled */\n    disabled?: boolean | undefined;\n    /** Associates the element with a form element */\n    form?: string | undefined;\n    /** URL to use for form submission */\n    formaction?: string | undefined;\n    /** Entry list encoding type to use for form submission */\n    formenctype?: EncTypeValue | undefined;\n    /** Variant to use for form submission */\n    formmethod?: FormMethodValue | undefined;\n    /** Bypass form control validation for form submission */\n    formnovalidate?: boolean | undefined;\n    /** Browsing context for form submission */\n    formtarget?: BrowsingContextValue | undefined;\n    /** Vertical dimension */\n    height?: number | undefined;\n    /** Third, indeterminate state for checkboxes */\n    indeterminate?: boolean | undefined;\n    /** List of autocomplete options */\n    list?: string | undefined;\n    /** Maximum value */\n    max?: number | undefined;\n    /** Maximum length of value */\n    maxlength?: number | undefined;\n    /** Minimum value */\n    min?: number | undefined;\n    /** Minimum length of value */\n    minlength?: number | undefined;\n    /** Whether to allow multiple values */\n    multiple?: boolean | undefined;\n    /** Name of the element to use for form submission and in the form.elements API */\n    name?: string | undefined;\n    /** Pattern to be matched by the form control's value */\n    pattern?: string | undefined;\n    /** User-visible label to be placed within the form control */\n    placeholder?: string | undefined;\n    /** Whether to allow the value to be edited by the user */\n    readonly?: boolean | undefined;\n    /** Whether the control is required for form submission */\n    required?: boolean | undefined;\n    /** Size of the control */\n    size?: number | undefined;\n    /** Address of the resource */\n    src?: string | undefined;\n    /** Granularity to be matched by the form control's value */\n    step?: number | undefined;\n    /** Type of form control */\n    type?: FormInputTypeValues | undefined;\n    /** Value of the form control */\n    value?: string | undefined;\n    /** Horizontal dimension */\n    width?: number | undefined;\n}\nconst HTMLInputElementMap: PropertyMap<\n    JSXInputElementInterface,\n    HTMLInputElement\n> = {\n    ...HTMLElementMap,\n    accept: {\n        makeAttrValue: attrIdentity,\n        idlName: 'accept',\n        makeIdlValue: attrIdentity,\n    },\n    alt: {\n        makeAttrValue: attrIdentity,\n        idlName: 'alt',\n        makeIdlValue: attrIdentity,\n    },\n    autocomplete: {\n        makeAttrValue: attrIdentity,\n        idlName: 'autocomplete',\n        makeIdlValue: attrIdentity,\n    },\n    checked: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'checked',\n        makeIdlValue: attrIdentity,\n    },\n    dirname: {\n        makeAttrValue: attrIdentity,\n        idlName: 'dirName',\n        makeIdlValue: attrIdentity,\n    },\n    disabled: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'disabled',\n        makeIdlValue: attrIdentity,\n    },\n    form: {\n        makeAttrValue: attrIdentity,\n        idlName: 'form',\n        makeIdlValue: attrIdentity,\n    },\n    formaction: {\n        makeAttrValue: attrIdentity,\n        idlName: 'formAction',\n        makeIdlValue: attrIdentity,\n    },\n    formenctype: {\n        makeAttrValue: attrIdentity,\n        idlName: 'formEnctype',\n        makeIdlValue: attrIdentity,\n    },\n    formmethod: {\n        makeAttrValue: attrIdentity,\n        idlName: 'formMethod',\n        makeIdlValue: attrIdentity,\n    },\n    formnovalidate: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'formNoValidate',\n        makeIdlValue: attrIdentity,\n    },\n    formtarget: {\n        makeAttrValue: attrIdentity,\n        idlName: 'formTarget',\n        makeIdlValue: attrIdentity,\n    },\n    height: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'height',\n        makeIdlValue: attrIdentity,\n    },\n    indeterminate: {\n        idlName: 'indeterminate',\n        makeIdlValue: attrIdentity,\n    },\n    list: {\n        makeAttrValue: attrIdentity,\n        idlName: 'list',\n        makeIdlValue: attrIdentity,\n    },\n    max: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'max',\n        makeIdlValue: attrIdentity,\n    },\n    maxlength: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'maxLength',\n        makeIdlValue: attrIdentity,\n    },\n    min: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'min',\n        makeIdlValue: attrIdentity,\n    },\n    minlength: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'minLength',\n        makeIdlValue: attrIdentity,\n    },\n    multiple: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'multiple',\n        makeIdlValue: attrIdentity,\n    },\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n    pattern: {\n        makeAttrValue: attrIdentity,\n        idlName: 'pattern',\n        makeIdlValue: attrIdentity,\n    },\n    placeholder: {\n        makeAttrValue: attrIdentity,\n        idlName: 'placeholder',\n        makeIdlValue: attrIdentity,\n    },\n    readonly: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'readOnly',\n        makeIdlValue: attrIdentity,\n    },\n    required: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'required',\n        makeIdlValue: attrIdentity,\n    },\n    size: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'size',\n        makeIdlValue: attrIdentity,\n    },\n    src: {\n        makeAttrValue: attrIdentity,\n        idlName: 'src',\n        makeIdlValue: attrIdentity,\n    },\n    step: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'step',\n        makeIdlValue: attrIdentity,\n    },\n    type: {\n        makeAttrValue: attrIdentity,\n        idlName: 'type',\n        makeIdlValue: attrIdentity,\n    },\n    value: {\n        makeAttrValue: attrIdentity,\n        idlName: 'value',\n        makeIdlValue: attrIdentity,\n    },\n    width: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'width',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXModElementInterface extends JSXElementInterface {\n    /** Link to the source of the quotation or more information about the edit */\n    cite?: string | undefined;\n    /** Date and (optionally) time of the change */\n    datetime?: string | undefined;\n}\n\nconst HTMLModElementMap: PropertyMap<JSXModElementInterface, HTMLModElement> = {\n    ...HTMLElementMap,\n    cite: {\n        makeAttrValue: attrIdentity,\n        idlName: 'cite',\n        makeIdlValue: attrIdentity,\n    },\n    datetime: {\n        makeAttrValue: attrIdentity,\n        idlName: 'dateTime',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXLabelElementInterface extends JSXElementInterface {\n    /** Associate the label with form control */\n    for?: string | undefined;\n}\n\nconst HTMLLabelElementMap: PropertyMap<\n    JSXLabelElementInterface,\n    HTMLLabelElement\n> = {\n    ...HTMLElementMap,\n    for: {\n        makeAttrValue: attrIdentity,\n        idlName: 'htmlFor',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXLegendElementInterface extends JSXElementInterface {}\n\nconst HTMLLegendElementMap: PropertyMap<\n    JSXLegendElementInterface,\n    HTMLLegendElement\n> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXLIElementInterface extends JSXElementInterface {\n    /** Ordinal value of the list item */\n    value?: string | undefined;\n}\n\nconst HTMLLIElementMap: PropertyMap<JSXLIElementInterface, HTMLLIElement> = {\n    ...HTMLElementMap,\n    value: {\n        makeAttrValue: attrIdentity,\n        idlName: 'value',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXLinkElementInterface extends JSXElementInterface {\n    /** Address of the hyperlink */\n    href?: string | undefined;\n    /** How the element handles crossorigin requests */\n    crossorigin?: CrossOriginValue | undefined;\n    /** Relationship between the document containing the hyperlink and the destination resource */\n    rel?: string | undefined;\n    /** Applicable media */\n    media?: string | undefined;\n    /** Integrity metadata used in Subresource Integrity checks [SRI] */\n    integrity?: string | undefined;\n    /** Language of the linked resource */\n    hreflang?: string | undefined;\n    /** Hint for the type of the referenced resource */\n    type?: string | undefined;\n    /** Referrer policy for fetches initiated by the element */\n    referrerpolicy?: ReferrerPolicyValue | undefined;\n    /** Sizes of the icons (for rel=\"icon\") */\n    sizes?: string | undefined;\n    /** Images to use in different situations, e.g., high-resolution displays, small monitors, etc. (for rel=\"preload\") */\n    imagesrcset?: string | undefined;\n    /** Image sizes for different page layouts (for rel=\"preload\") */\n    imagesizes?: string | undefined;\n    /** Potential destination for a preload request (for rel=\"preload\" and rel=\"modulepreload\") */\n    as?: string | undefined;\n    /** Color to use when customizing a site's icon (for rel=\"mask-icon\") */\n    color?: string | undefined;\n    /** Whether the link is disabled */\n    disabled?: boolean | undefined;\n}\n\nconst HTMLLinkElementMap: PropertyMap<\n    JSXLinkElementInterface,\n    HTMLLinkElement\n> = {\n    ...HTMLElementMap,\n    href: {\n        makeAttrValue: attrIdentity,\n        idlName: 'href',\n        makeIdlValue: attrIdentity,\n    },\n    crossorigin: {\n        makeAttrValue: attrIdentity,\n        idlName: 'crossOrigin',\n        makeIdlValue: attrIdentity,\n    },\n    rel: {\n        makeAttrValue: attrIdentity,\n        idlName: 'rel',\n        makeIdlValue: attrIdentity,\n    },\n    media: {\n        makeAttrValue: attrIdentity,\n        idlName: 'media',\n        makeIdlValue: attrIdentity,\n    },\n    integrity: {\n        makeAttrValue: attrIdentity,\n        idlName: 'integrity',\n        makeIdlValue: attrIdentity,\n    },\n    hreflang: {\n        makeAttrValue: attrIdentity,\n        idlName: 'hreflang',\n        makeIdlValue: attrIdentity,\n    },\n    type: {\n        makeAttrValue: attrIdentity,\n        idlName: 'type',\n        makeIdlValue: attrIdentity,\n    },\n    referrerpolicy: {\n        makeAttrValue: attrIdentity,\n        idlName: 'referrerPolicy',\n        makeIdlValue: attrIdentity,\n    },\n    sizes: {\n        makeAttrValue: attrIdentity,\n        idlName: 'sizes',\n        makeIdlValue: attrIdentity,\n    },\n    imagesrcset: {\n        makeAttrValue: attrIdentity,\n        idlName: 'imageSrcset',\n        makeIdlValue: attrIdentity,\n    },\n    imagesizes: {\n        makeAttrValue: attrIdentity,\n        idlName: 'imageSizes',\n        makeIdlValue: attrIdentity,\n    },\n    as: {\n        makeAttrValue: attrIdentity,\n        idlName: 'as',\n        makeIdlValue: attrIdentity,\n    },\n    color: {\n        makeAttrValue: attrIdentity,\n    },\n    disabled: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'disabled',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXMapElementInterface extends JSXElementInterface {\n    /** Name of image map to reference from the usemap attribute */\n    name?: string | undefined;\n}\n\nconst HTMLMapElementMap: PropertyMap<JSXMapElementInterface, HTMLMapElement> = {\n    ...HTMLElementMap,\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXMenuElementInterface extends JSXElementInterface {}\n\nconst HTMLMenuElementMap: PropertyMap<\n    JSXMenuElementInterface,\n    HTMLMenuElement\n> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXMetaElementInterface extends JSXElementInterface {\n    /** Metadata name */\n    name?:\n        | 'application-name'\n        | 'author'\n        | 'description'\n        | 'generator'\n        | 'keywords'\n        | 'referrer'\n        | 'theme-color'\n        | 'color-scheme'\n        | string\n        | undefined;\n    /** Pragma directive */\n    'http-equiv'?: string | undefined;\n    /** Value of the element */\n    content?: string | undefined;\n    /** Character encoding declaration */\n    charset?: string | undefined;\n    /** Applicable media */\n    media?: string | undefined;\n}\n\nconst HTMLMetaElementMap: PropertyMap<\n    JSXMetaElementInterface,\n    HTMLMetaElement & MissingFromTypescriptHTMLMetaElementProperties\n> = {\n    ...HTMLElementMap,\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n    'http-equiv': {\n        makeAttrValue: attrIdentity,\n        idlName: 'httpEquiv',\n        makeIdlValue: attrIdentity,\n    },\n    content: {\n        makeAttrValue: attrIdentity,\n        idlName: 'content',\n        makeIdlValue: attrIdentity,\n    },\n    charset: {\n        makeAttrValue: attrIdentity,\n    },\n    media: {\n        makeAttrValue: attrIdentity,\n        idlName: 'media',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXMeterElementInterface extends JSXElementInterface {\n    /** Current value of the element */\n    value?: number | undefined;\n    /** Lower bound of range */\n    min?: number | undefined;\n    /** Upper bound of range */\n    max?: number | undefined;\n    /** High limit of low range */\n    low?: number | undefined;\n    /** Low limit of high range */\n    high?: number | undefined;\n    /** Optimum value in gauge */\n    optimum?: number | undefined;\n}\n\nconst HTMLMeterElementMap: PropertyMap<\n    JSXMeterElementInterface,\n    HTMLMeterElement\n> = {\n    ...HTMLElementMap,\n    value: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'value',\n        makeIdlValue: attrIdentity,\n    },\n    min: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'min',\n        makeIdlValue: attrIdentity,\n    },\n    max: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'max',\n        makeIdlValue: attrIdentity,\n    },\n    low: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'low',\n        makeIdlValue: attrIdentity,\n    },\n    high: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'high',\n        makeIdlValue: attrIdentity,\n    },\n    optimum: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'optimum',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXObjectElementInterface extends JSXElementInterface {\n    /** Address of the resource */\n    data?: string | undefined;\n    /** Type of embedded resource */\n    type?: string | undefined;\n    /** Name of nested browsing context */\n    name?: BrowsingContextValue | undefined;\n    /** Associates the element with a form element */\n    form?: string | undefined;\n    /** Horizontal dimension */\n    width?: string | undefined;\n    /** Vertical dimension */\n    height?: string | undefined;\n}\n\nconst HTMLObjectElementMap: PropertyMap<\n    JSXObjectElementInterface,\n    HTMLObjectElement\n> = {\n    ...HTMLElementMap,\n    data: {\n        makeAttrValue: attrIdentity,\n        idlName: 'data',\n        makeIdlValue: attrIdentity,\n    },\n    type: {\n        makeAttrValue: attrIdentity,\n        idlName: 'type',\n        makeIdlValue: attrIdentity,\n    },\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n    form: {\n        makeAttrValue: attrIdentity,\n    },\n    width: {\n        makeAttrValue: attrIdentity,\n        idlName: 'width',\n        makeIdlValue: attrIdentity,\n    },\n    height: {\n        makeAttrValue: attrIdentity,\n        idlName: 'height',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXOListElementInterface extends JSXElementInterface {\n    /** Number the list backwards */\n    reversed?: boolean | undefined;\n    /** Starting value of the list */\n    start?: number | undefined;\n    /** Kind of list marker */\n    type?:\n        | 'decimal'\n        | 'lower-alpha'\n        | 'upper-alpha'\n        | 'lower-roman'\n        | 'upper-roman'\n        | string\n        | undefined;\n}\n\nconst HTMLOListElementMap: PropertyMap<\n    JSXOListElementInterface,\n    HTMLOListElement\n> = {\n    ...HTMLElementMap,\n    reversed: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'reversed',\n        makeIdlValue: attrIdentity,\n    },\n    start: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'start',\n        makeIdlValue: attrIdentity,\n    },\n    type: {\n        makeAttrValue: attrIdentity,\n        idlName: 'type',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXOptGroupElementInterface extends JSXElementInterface {\n    /** Whether the form control is disabled */\n    disabled?: boolean | undefined;\n    /** User-visible label */\n    label?: string | undefined;\n}\n\nconst HTMLOptGroupElementMap: PropertyMap<\n    JSXOptGroupElementInterface,\n    HTMLOptGroupElement\n> = {\n    ...HTMLElementMap,\n    disabled: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'disabled',\n        makeIdlValue: attrIdentity,\n    },\n    label: {\n        makeAttrValue: attrIdentity,\n        idlName: 'label',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXOptionElementInterface extends JSXElementInterface {\n    /** Whether the form control is disabled */\n    disabled?: boolean | undefined;\n    /** User-visible label */\n    label?: string | undefined;\n    /** Whether the option is selected by default */\n    selected?: boolean | undefined;\n    /** Value to be used for form submission */\n    value?: string | undefined;\n}\n\nconst HTMLOptionElementMap: PropertyMap<\n    JSXOptionElementInterface,\n    HTMLOptionElement\n> = {\n    ...HTMLElementMap,\n    disabled: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'disabled',\n        makeIdlValue: attrIdentity,\n    },\n    label: {\n        makeAttrValue: attrIdentity,\n        idlName: 'label',\n        makeIdlValue: attrIdentity,\n    },\n    selected: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'selected',\n        makeIdlValue: attrIdentity,\n    },\n    value: {\n        makeAttrValue: attrIdentity,\n        idlName: 'value',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXOutputElementInterface extends JSXElementInterface {\n    /** Specifies controls from which the output was calculated */\n    for?: string | undefined;\n    /** Associates the element with a form element */\n    form?: string | undefined;\n    /** Name of the element to use in the form.elements API. */\n    name?: string | undefined;\n}\n\nconst HTMLOutputElementMap: PropertyMap<\n    JSXOutputElementInterface,\n    HTMLOutputElement\n> = {\n    ...HTMLElementMap,\n    for: {\n        makeAttrValue: attrIdentity,\n        idlName: 'htmlFor',\n        makeIdlValue: attrIdentity,\n    },\n    form: { makeAttrValue: attrIdentity },\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXParagraphElementInterface extends JSXElementInterface {}\n\nconst HTMLParagraphElementMap: PropertyMap<\n    JSXParagraphElementInterface,\n    HTMLParagraphElement\n> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXParamElementInterface extends JSXElementInterface {\n    /** Name of parameter */\n    name?: string | undefined;\n    /** Value of parameter */\n    value?: string | undefined;\n}\n\nconst HTMLParamElementMap: PropertyMap<\n    JSXParamElementInterface,\n    HTMLParamElement\n> = {\n    ...HTMLElementMap,\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n    value: {\n        makeAttrValue: attrIdentity,\n        idlName: 'value',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXPictureElementInterface extends JSXElementInterface {}\n\nconst HTMLPictureElementMap: PropertyMap<\n    JSXPictureElementInterface,\n    HTMLPictureElement\n> = {\n    ...HTMLElementMap,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXPreElementInterface extends JSXElementInterface {}\n\nconst HTMLPreElementMap: PropertyMap<JSXPreElementInterface, HTMLPreElement> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXProgressElementInterface extends JSXElementInterface {\n    /** Current value of the element */\n    value?: number | undefined;\n    /** Upper bound of range */\n    max?: number | undefined;\n}\n\nconst HTMLProgressElementMap: PropertyMap<\n    JSXProgressElementInterface,\n    HTMLProgressElement\n> = {\n    ...HTMLElementMap,\n    value: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'value',\n        makeIdlValue: attrIdentity,\n    },\n    max: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'max',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXQuoteElementInterface extends JSXElementInterface {\n    /** Link to the source of the quotation or more information about the edit */\n    cite?: string | undefined;\n}\n\nconst HTMLQuoteElementMap: PropertyMap<\n    JSXQuoteElementInterface,\n    HTMLQuoteElement\n> = {\n    ...HTMLElementMap,\n    cite: {\n        makeAttrValue: attrIdentity,\n        idlName: 'cite',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXScriptElementInterface extends JSXElementInterface {\n    /** Address of the resource */\n    src?: string | undefined;\n    /** Type of script */\n    type?: 'application/json' | 'text/json' | 'module' | string | undefined;\n    /** Prevents execution in user agents that support module scripts */\n    nomodule?: boolean | undefined;\n    /** Execute script when available, without blocking while fetching */\n    async?: boolean | undefined;\n    /** Defer script execution */\n    defer?: boolean | undefined;\n    /** How the element handles crossorigin requests */\n    crossorigin?: CrossOriginValue | undefined;\n    /** Integrity metadata used in Subresource Integrity checks [SRI] */\n    integrity?: string | undefined;\n    /** Referrer policy for fetches initiated by the element */\n    referrerpolicy?: ReferrerPolicyValue | undefined;\n}\n\nconst HTMLScriptElementMap: PropertyMap<\n    JSXScriptElementInterface,\n    HTMLScriptElement\n> = {\n    ...HTMLElementMap,\n    src: {\n        makeAttrValue: attrIdentity,\n        idlName: 'src',\n        makeIdlValue: attrIdentity,\n    },\n    type: {\n        makeAttrValue: attrIdentity,\n        idlName: 'type',\n        makeIdlValue: attrIdentity,\n    },\n    nomodule: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'noModule',\n        makeIdlValue: attrIdentity,\n    },\n    async: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'async',\n        makeIdlValue: attrIdentity,\n    },\n    defer: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'defer',\n        makeIdlValue: attrIdentity,\n    },\n    crossorigin: {\n        makeAttrValue: attrIdentity,\n        idlName: 'crossOrigin',\n        makeIdlValue: attrIdentity,\n    },\n    integrity: {\n        makeAttrValue: attrIdentity,\n        idlName: 'integrity',\n        makeIdlValue: attrIdentity,\n    },\n    referrerpolicy: {\n        makeAttrValue: attrIdentity,\n        idlName: 'referrerPolicy',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXSelectElementInterface extends JSXElementInterface {\n    /** Hint for form autofill feature */\n    autocomplete?: AutocompleteValue | undefined;\n    /** Whether the form control is disabled */\n    disabled?: boolean | undefined;\n    /** Associates the element with a form element */\n    form?: string | undefined;\n    /** Whether to allow multiple values */\n    multiple?: boolean | undefined;\n    /** Name of the element to use for form submission and in the form.elements API */\n    name?: string | undefined;\n    /** Whether the control is required for form submission */\n    required?: boolean | undefined;\n    /** Size of the control */\n    size?: number | undefined;\n    /** Value of the element */\n    value?: string | undefined;\n}\n\nconst HTMLSelectElementMap: PropertyMap<\n    JSXSelectElementInterface,\n    HTMLSelectElement\n> = {\n    ...HTMLElementMap,\n    autocomplete: {\n        makeAttrValue: attrIdentity,\n        idlName: 'autocomplete',\n        makeIdlValue: attrIdentity,\n    },\n    disabled: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'disabled',\n        makeIdlValue: attrIdentity,\n    },\n    form: { makeAttrValue: attrIdentity },\n    multiple: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'multiple',\n        makeIdlValue: attrIdentity,\n    },\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n    required: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'required',\n        makeIdlValue: attrIdentity,\n    },\n    size: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'size',\n        makeIdlValue: attrIdentity,\n    },\n    value: { idlName: 'value', makeIdlValue: attrIdentity },\n};\n\ninterface JSXSlotElementInterface extends JSXElementInterface {\n    /** Name of shadow tree slot */\n    name?: string | undefined;\n}\n\nconst HTMLSlotElementMap: PropertyMap<\n    JSXSlotElementInterface,\n    HTMLSlotElement\n> = {\n    ...HTMLElementMap,\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXSourceElementInterface extends JSXElementInterface {\n    /** Type of embedded resource */\n    type?: string | undefined;\n    /** (in video or audio) \u2014 Address of the resource */\n    src?: string | undefined;\n    /** (in picture) \u2014 Images to use in different situations, e.g., high-resolution displays, small monitors, etc. */\n    srcset?: string | undefined;\n    /** (in picture) \u2014 Image sizes for different page layouts */\n    sizes?: string | undefined;\n    /** (in picture) \u2014 Applicable media */\n    media?: string | undefined;\n    /** (in picture) \u2014 Horizontal dimension */\n    width?: number | undefined;\n    /** (in picture) \u2014 Vertical dimension */\n    height?: number | undefined;\n}\n\nconst HTMLSourceElementMap: PropertyMap<\n    JSXSourceElementInterface,\n    HTMLSourceElement & MissingFromTypescriptHTMLSourceElementProperties\n> = {\n    ...HTMLElementMap,\n    type: {\n        makeAttrValue: attrIdentity,\n        idlName: 'type',\n        makeIdlValue: attrIdentity,\n    },\n    src: {\n        makeAttrValue: attrIdentity,\n        idlName: 'src',\n        makeIdlValue: attrIdentity,\n    },\n    srcset: {\n        makeAttrValue: attrIdentity,\n        idlName: 'srcset',\n        makeIdlValue: attrIdentity,\n    },\n    sizes: {\n        makeAttrValue: attrIdentity,\n        idlName: 'sizes',\n        makeIdlValue: attrIdentity,\n    },\n    media: {\n        makeAttrValue: attrIdentity,\n        idlName: 'media',\n        makeIdlValue: attrIdentity,\n    },\n    width: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'width',\n        makeIdlValue: attrIdentity,\n    },\n    height: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'height',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXSpanElementInterface extends JSXElementInterface {}\n\nconst HTMLSpanElementMap: PropertyMap<\n    JSXSpanElementInterface,\n    HTMLSpanElement\n> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXStyleElementInterface extends JSXElementInterface {\n    /** Applicable media */\n    media?: string | undefined;\n}\n\nconst HTMLStyleElementMap: PropertyMap<\n    JSXStyleElementInterface,\n    HTMLStyleElement\n> = {\n    ...HTMLElementMap,\n    media: {\n        makeAttrValue: attrIdentity,\n        idlName: 'media',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXTableElementInterface extends JSXElementInterface {}\n\nconst HTMLTableElementMap: PropertyMap<\n    JSXTableElementInterface,\n    HTMLTableElement\n> = {\n    ...HTMLElementMap,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXTableCaptionElementInterface extends JSXElementInterface {}\n\nconst HTMLTableCaptionElementMap: PropertyMap<\n    JSXTableCaptionElementInterface,\n    HTMLTableCaptionElement\n> = {\n    ...HTMLElementMap,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXTableSectionElementInterface extends JSXElementInterface {}\n\nconst HTMLTableSectionElementMap: PropertyMap<\n    JSXTableSectionElementInterface,\n    HTMLTableSectionElement\n> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXTableCellElementInterface extends JSXElementInterface {\n    /** Number of columns that the cell is to span */\n    colspan?: number | undefined;\n    /** Number of rows that the cell is to span */\n    rowspan?: number | undefined;\n    /** The header cells for this cell */\n    headers?: string | undefined;\n}\n\nconst HTMLTableCellElementMap: PropertyMap<\n    JSXTableCellElementInterface,\n    HTMLTableCellElement\n> = {\n    ...HTMLElementMap,\n    colspan: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'colSpan',\n        makeIdlValue: attrIdentity,\n    },\n    rowspan: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'rowSpan',\n        makeIdlValue: attrIdentity,\n    },\n    headers: {\n        makeAttrValue: attrIdentity,\n        idlName: 'headers',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXTableColElementInterface extends JSXElementInterface {\n    /** Number of columns spanned by the element */\n    span?: number | undefined;\n}\n\nconst HTMLTableColElementMap: PropertyMap<\n    JSXTableColElementInterface,\n    HTMLTableColElement\n> = {\n    ...HTMLElementMap,\n    span: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'span',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXTemplateElementInterface extends JSXElementInterface {}\n\nconst HTMLTemplateElementMap: PropertyMap<\n    JSXTemplateElementInterface,\n    HTMLTemplateElement\n> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXTextAreaElementInterface extends JSXElementInterface {\n    /** Hint for form autofill feature */\n    autocomplete?: AutocompleteValue | undefined;\n    /** Maximum number of characters per line */\n    cols?: number | undefined;\n    /** Name of form control to use for sending the element's directionality in form submission */\n    dirname?: DirValue | undefined;\n    /** Whether the form control is disabled */\n    disabled?: boolean | undefined;\n    /** Associates the element with a form element */\n    form?: string | undefined;\n    /** Maximum length of value */\n    maxlength?: number | undefined;\n    /** Minimum length of value */\n    minlength?: number | undefined;\n    /** Name of the element to use for form submission and in the form.elements API */\n    name?: string | undefined;\n    /** User-visible label to be placed within the form control */\n    placeholder?: string | undefined;\n    /** Whether to allow the value to be edited by the user */\n    readonly?: boolean | undefined;\n    /** Whether the control is required for form submission */\n    required?: boolean | undefined;\n    /** Number of lines to show */\n    rows?: number | undefined;\n    /** How the value of the form control is to be wrapped for form submission */\n    wrap?: 'soft' | 'hard' | string | undefined;\n}\n\nconst HTMLTextAreaElementMap: PropertyMap<\n    JSXTextAreaElementInterface,\n    HTMLTextAreaElement\n> = {\n    ...HTMLElementMap,\n    autocomplete: {\n        makeAttrValue: attrIdentity,\n        idlName: 'autocomplete',\n        makeIdlValue: attrIdentity,\n    },\n    cols: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'cols',\n        makeIdlValue: attrIdentity,\n    },\n    dirname: {\n        makeAttrValue: attrIdentity,\n        idlName: 'dirName',\n        makeIdlValue: attrIdentity,\n    },\n    disabled: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'disabled',\n        makeIdlValue: attrIdentity,\n    },\n    form: { makeAttrValue: attrIdentity },\n    maxlength: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'maxLength',\n        makeIdlValue: attrIdentity,\n    },\n    minlength: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'minLength',\n        makeIdlValue: attrIdentity,\n    },\n    name: {\n        makeAttrValue: attrIdentity,\n        idlName: 'name',\n        makeIdlValue: attrIdentity,\n    },\n    placeholder: {\n        makeAttrValue: attrIdentity,\n        idlName: 'placeholder',\n        makeIdlValue: attrIdentity,\n    },\n    readonly: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'readOnly',\n        makeIdlValue: attrIdentity,\n    },\n    required: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'required',\n        makeIdlValue: attrIdentity,\n    },\n    rows: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'rows',\n        makeIdlValue: attrIdentity,\n    },\n    wrap: {\n        makeAttrValue: attrIdentity,\n        idlName: 'wrap',\n        makeIdlValue: attrIdentity,\n    },\n};\n\ninterface JSXTimeElementInterface extends JSXElementInterface {\n    /** Machine-readable value */\n    datetime?: string | undefined;\n}\n\nconst HTMLTimeElementMap: PropertyMap<\n    JSXTimeElementInterface,\n    HTMLTimeElement\n> = {\n    ...HTMLElementMap,\n    datetime: {\n        makeAttrValue: attrIdentity,\n        idlName: 'dateTime',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXTitleElementInterface extends JSXElementInterface {}\n\nconst HTMLTitleElementMap: PropertyMap<\n    JSXTitleElementInterface,\n    HTMLTitleElement\n> = {\n    ...HTMLElementMap,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXTableRowElementInterface extends JSXElementInterface {}\n\nconst HTMLTableRowElementMap: PropertyMap<\n    JSXTableRowElementInterface,\n    HTMLTableRowElement\n> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXTrackElementInterface extends JSXElementInterface {\n    /** The type of text track */\n    kind?:\n        | 'subtitles'\n        | 'captions'\n        | 'descriptions'\n        | 'chapters'\n        | 'metadata'\n        | string\n        | undefined;\n    /** Address of the resource */\n    src?: string | undefined;\n    /** Language of the text track */\n    srclang?: string | undefined;\n    /** User-visible label */\n    label?: string | undefined;\n    /** Enable the track if no other text track is more suitable */\n    default?: boolean | undefined;\n}\n\nconst HTMLTrackElementMap: PropertyMap<\n    JSXTrackElementInterface,\n    HTMLTrackElement\n> = {\n    ...HTMLElementMap,\n    kind: {\n        makeAttrValue: attrIdentity,\n        idlName: 'kind',\n        makeIdlValue: attrIdentity,\n    },\n    src: {\n        makeAttrValue: attrIdentity,\n        idlName: 'src',\n        makeIdlValue: attrIdentity,\n    },\n    srclang: {\n        makeAttrValue: attrIdentity,\n        idlName: 'srclang',\n        makeIdlValue: attrIdentity,\n    },\n    label: {\n        makeAttrValue: attrIdentity,\n        idlName: 'label',\n        makeIdlValue: attrIdentity,\n    },\n    default: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'default',\n        makeIdlValue: attrIdentity,\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface JSXUListElementInterface extends JSXElementInterface {}\n\nconst HTMLUListElementMap: PropertyMap<\n    JSXUListElementInterface,\n    HTMLUListElement\n> = {\n    ...HTMLElementMap,\n};\n\ninterface JSXVideoElementInterface extends JSXMediaElementInterface {\n    /** Poster frame to show prior to video playback */\n    poster?: string | undefined;\n    /** Encourage the user agent to display video content within the element's playback area */\n    playsinline?: string | undefined;\n    /** Horizontal dimension */\n    width?: number | undefined;\n    /** Vertical dimension */\n    height?: number | undefined;\n}\n\nconst HTMLVideoElementMap: PropertyMap<\n    JSXVideoElementInterface,\n    HTMLVideoElement\n> = {\n    ...HTMLElementMap,\n    src: {\n        makeAttrValue: attrIdentity,\n        idlName: 'src',\n        makeIdlValue: attrIdentity,\n    },\n    crossorigin: {\n        makeAttrValue: attrIdentity,\n        idlName: 'crossOrigin',\n        makeIdlValue: attrIdentity,\n    },\n    preload: {\n        makeAttrValue: attrIdentity,\n        idlName: 'preload',\n        makeIdlValue: attrIdentity,\n    },\n    autoplay: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'autoplay',\n        makeIdlValue: attrIdentity,\n    },\n    loop: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'loop',\n        makeIdlValue: attrBooleanToEmptyString,\n    },\n    muted: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'muted',\n        makeIdlValue: attrIdentity,\n    },\n    controls: {\n        makeAttrValue: attrBooleanToEmptyString,\n        idlName: 'controls',\n        makeIdlValue: attrIdentity,\n    },\n    poster: {\n        makeAttrValue: attrIdentity,\n        idlName: 'poster',\n        makeIdlValue: attrIdentity,\n    },\n    playsinline: {\n        makeAttrValue: attrIdentity,\n        idlName: 'playsInline',\n        makeIdlValue: attrIdentity,\n    },\n    width: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'width',\n        makeIdlValue: attrIdentity,\n    },\n    height: {\n        makeAttrValue: attrNumberToString,\n        idlName: 'height',\n        makeIdlValue: attrIdentity,\n    },\n};\n\nexport const ElementTypeMapping = {\n    a: HTMLAnchorElementMap,\n    abbr: HTMLElementMap,\n    address: HTMLElementMap,\n    area: HTMLAreaElementMap,\n    article: HTMLElementMap,\n    aside: HTMLElementMap,\n    audio: HTMLAudioElementMap,\n    b: HTMLElementMap,\n    base: HTMLBaseElementMap,\n    bdi: HTMLElementMap,\n    bdo: HTMLElementMap,\n    blockquote: HTMLElementMap,\n    body: HTMLBodyElementMap,\n    br: HTMLBRElementMap,\n    button: HTMLButtonElementMap,\n    canvas: HTMLCanvasElementMap,\n    caption: HTMLTableCaptionElementMap,\n    cite: HTMLElementMap,\n    code: HTMLElementMap,\n    col: HTMLTableColElementMap,\n    colgroup: HTMLTableColElementMap,\n    data: HTMLDataElementMap,\n    datalist: HTMLDataListElementMap,\n    dd: HTMLElementMap,\n    del: HTMLModElementMap,\n    details: HTMLDetailsElementMap,\n    dfn: HTMLElementMap,\n    dialog: HTMLDialogElementMap,\n    div: HTMLDivElementMap,\n    dl: HTMLDListElementMap,\n    dt: HTMLElementMap,\n    em: HTMLElementMap,\n    embed: HTMLEmbedElementMap,\n    fieldset: HTMLFieldSetElementMap,\n    figcaption: HTMLElementMap,\n    figure: HTMLElementMap,\n    footer: HTMLElementMap,\n    form: HTMLFormElementMap,\n    h1: HTMLElementMap,\n    h2: HTMLElementMap,\n    h3: HTMLElementMap,\n    h4: HTMLElementMap,\n    h5: HTMLElementMap,\n    h6: HTMLElementMap,\n    head: HTMLHeadElementMap,\n    header: HTMLElementMap,\n    heading: HTMLHeadingElementMap,\n    hgroup: HTMLElementMap,\n    hr: HTMLHRElementMap,\n    html: HTMLHtmlElementMap,\n    i: HTMLElementMap,\n    iframe: HTMLIFrameElementMap,\n    image: HTMLImageElementMap,\n    img: HTMLElementMap,\n    input: HTMLInputElementMap,\n    ins: HTMLModElementMap,\n    kbd: HTMLElementMap,\n    label: HTMLLabelElementMap,\n    legend: HTMLLegendElementMap,\n    li: HTMLLIElementMap,\n    link: HTMLLinkElementMap,\n    main: HTMLElementMap,\n    map: HTMLMapElementMap,\n    mark: HTMLElementMap,\n    menu: HTMLMenuElementMap,\n    meta: HTMLMetaElementMap,\n    meter: HTMLMeterElementMap,\n    nav: HTMLElementMap,\n    noscript: HTMLElementMap,\n    object: HTMLObjectElementMap,\n    ol: HTMLOListElementMap,\n    optgroup: HTMLOptGroupElementMap,\n    option: HTMLOptionElementMap,\n    output: HTMLOutputElementMap,\n    p: HTMLParagraphElementMap,\n    param: HTMLParamElementMap,\n    picture: HTMLPictureElementMap,\n    pre: HTMLPreElementMap,\n    progress: HTMLProgressElementMap,\n    quote: HTMLQuoteElementMap,\n    rp: HTMLElementMap,\n    rt: HTMLElementMap,\n    ruby: HTMLElementMap,\n    s: HTMLElementMap,\n    samp: HTMLElementMap,\n    script: HTMLScriptElementMap,\n    section: HTMLElementMap,\n    select: HTMLSelectElementMap,\n    slot: HTMLSlotElementMap,\n    small: HTMLElementMap,\n    source: HTMLSourceElementMap,\n    span: HTMLSpanElementMap,\n    strong: HTMLElementMap,\n    style: HTMLStyleElementMap,\n    sub: HTMLElementMap,\n    summary: HTMLElementMap,\n    sup: HTMLElementMap,\n    table: HTMLTableElementMap,\n    tbody: HTMLTableSectionElementMap,\n    td: HTMLTableCellElementMap,\n    template: HTMLTemplateElementMap,\n    textarea: HTMLTextAreaElementMap,\n    tfoot: HTMLTableSectionElementMap,\n    th: HTMLElementMap,\n    thead: HTMLTableSectionElementMap,\n    time: HTMLTimeElementMap,\n    title: HTMLTitleElementMap,\n    tr: HTMLTableRowElementMap,\n    track: HTMLTrackElementMap,\n    u: HTMLElementMap,\n    ul: HTMLUListElementMap,\n    var: HTMLElementMap,\n    video: HTMLVideoElementMap,\n    wbr: HTMLElementMap,\n} as const;\n\n// TODO: maybe typecheck this?\ninterface ElementTypeMappingField {\n    makeAttrValue?: (jsxAttr: any) => string | undefined;\n    idlName?: any;\n    makeIdlValue?: (jsxAttr: any) => any;\n}\n\n// TODO: maybe typecheck this?\nexport function getElementTypeMapping(\n    elementName: string,\n    property: string\n): ElementTypeMappingField {\n    return (ElementTypeMapping as any)[elementName]?.[property];\n}\n\ntype WithCalculationsAndRef<\n    TJSXType extends JSXElementInterface,\n    TElement extends HTMLElement\n> = {\n    ref?: undefined | Ref<TElement> | ((current: TElement | undefined) => void);\n\n    'on:abort'?: (event: Event) => void;\n    'on:auxclick'?: (event: PointerEvent) => void;\n    'on:beforeinput'?: (event: InputEvent) => void;\n    'on:blur'?: (event: FocusEvent) => void;\n    'on:cancel'?: (event: Event) => void;\n    'on:change'?: (event: Event) => void;\n    'on:click'?: (event: PointerEvent) => void;\n    'on:close'?: (event: Event) => void;\n    'on:compositionend'?: (event: CompositionEvent) => void;\n    'on:compositionstart'?: (event: CompositionEvent) => void;\n    'on:compositionupdate'?: (event: CompositionEvent) => void;\n    'on:connect'?: (event: MessageEvent) => void;\n    'on:contextlost'?: (event: Event) => void;\n    'on:contextmenu'?: (event: PointerEvent) => void;\n    'on:contextrestored'?: (event: Event) => void;\n    'on:copy'?: (event: Event) => void;\n    'on:cut'?: (event: Event) => void;\n    'on:dblclick'?: (event: MouseEvent) => void;\n    'on:drag'?: (event: DragEvent) => void;\n    'on:dragend'?: (event: DragEvent) => void;\n    'on:dragenter'?: (event: DragEvent) => void;\n    'on:dragleave'?: (event: DragEvent) => void;\n    'on:dragover'?: (event: DragEvent) => void;\n    'on:dragstart'?: (event: DragEvent) => void;\n    'on:drop'?: (event: DragEvent) => void;\n    'on:emptied'?: (event: Event) => void;\n    'on:error'?: (event: Event) => void;\n    'on:focus'?: (event: FocusEvent) => void;\n    'on:focusin'?: (event: FocusEvent) => void;\n    'on:focusout'?: (event: FocusEvent) => void;\n    'on:formdata'?: (event: FormDataEvent) => void;\n    'on:hashchange'?: (event: HashChangeEvent) => void;\n    'on:input'?: (event: InputEvent) => void;\n    'on:invalid'?: (event: Event) => void;\n    'on:keydown'?: (event: KeyboardEvent) => void;\n    'on:keyup'?: (event: KeyboardEvent) => void;\n    'on:languagechange'?: (event: Event) => void;\n    'on:load'?: (event: Event) => void;\n    'on:loadstart'?: (event: Event) => void;\n    'on:message'?: (event: MessageEvent) => void;\n    'on:messageerror'?: (event: MessageEvent) => void;\n    'on:mousedown'?: (event: MouseEvent) => void;\n    'on:mouseenter'?: (event: MouseEvent) => void;\n    'on:mouseleave'?: (event: MouseEvent) => void;\n    'on:mousemove'?: (event: MouseEvent) => void;\n    'on:mouseout'?: (event: MouseEvent) => void;\n    'on:mouseover'?: (event: MouseEvent) => void;\n    'on:mouseup'?: (event: MouseEvent) => void;\n    'on:offline'?: (event: Event) => void;\n    'on:online'?: (event: Event) => void;\n    'on:open'?: (event: Event) => void;\n    'on:pagehide'?: (event: PageTransitionEvent) => void;\n    'on:pageshow'?: (event: PageTransitionEvent) => void;\n    'on:paste'?: (event: Event) => void;\n    'on:popstate'?: (event: PopStateEvent) => void;\n    'on:progress'?: (event: Event) => void;\n    'on:readystatechange'?: (event: Event) => void;\n    'on:rejectionhandled'?: (event: PromiseRejectionEvent) => void;\n    'on:reset'?: (event: Event) => void;\n    'on:securitypolicyviolation'?: (event: Event) => void;\n    'on:select'?: (event: Event) => void;\n    'on:slotchange'?: (event: Event) => void;\n    'on:stalled'?: (event: Event) => void;\n    'on:storage'?: (event: StorageEvent) => void;\n    'on:submit'?: (event: SubmitEvent) => void;\n    'on:suspend'?: (event: Event) => void;\n    'on:toggle'?: (event: Event) => void;\n    'on:unhandledrejection'?: (event: PromiseRejectionEvent) => void;\n    'on:unload'?: (event: Event) => void;\n    'on:visibilitychange'?: (event: Event) => void;\n    'on:wheel'?: (event: WheelEvent) => void;\n} & {\n    //[key: `on:${string}`]: EventHandler<Event> | undefined;\n    [key: `data-${string}`]:\n        | Calculation<string | undefined>\n        | string\n        | undefined;\n} & {\n    [Key in keyof TJSXType]: Calculation<TJSXType[Key]> | TJSXType[Key];\n};\n\nexport interface KnownElements {\n    a: WithCalculationsAndRef<JSXAnchorElementInterface, HTMLAnchorElement>;\n    abbr: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    address: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    area: WithCalculationsAndRef<JSXAreaElementInterface, HTMLAreaElement>;\n    article: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    aside: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    audio: WithCalculationsAndRef<JSXAudioElementInterface, HTMLAudioElement>;\n    b: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    base: WithCalculationsAndRef<JSXBaseElementInterface, HTMLBaseElement>;\n    bdi: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    bdo: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    blockquote: WithCalculationsAndRef<\n        JSXQuoteElementInterface,\n        HTMLQuoteElement\n    >;\n    body: WithCalculationsAndRef<JSXBodyElementInterface, HTMLBodyElement>;\n    br: WithCalculationsAndRef<JSXBRElementInterface, HTMLBRElement>;\n    button: WithCalculationsAndRef<\n        JSXButtonElementInterface,\n        HTMLButtonElement\n    >;\n    canvas: WithCalculationsAndRef<\n        JSXCanvasElementInterface,\n        HTMLCanvasElement\n    >;\n    caption: WithCalculationsAndRef<\n        JSXTableCaptionElementInterface,\n        HTMLTableCaptionElement\n    >;\n    cite: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    code: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    col: WithCalculationsAndRef<\n        JSXTableColElementInterface,\n        HTMLTableColElement\n    >;\n    colgroup: WithCalculationsAndRef<\n        JSXTableColElementInterface,\n        HTMLTableColElement\n    >;\n    data: WithCalculationsAndRef<JSXDataElementInterface, HTMLDataElement>;\n    datalist: WithCalculationsAndRef<\n        JSXDataListElementInterface,\n        HTMLDataListElement\n    >;\n    dd: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    del: WithCalculationsAndRef<JSXModElementInterface, HTMLModElement>;\n    details: WithCalculationsAndRef<\n        JSXDetailsElementInterface,\n        HTMLDetailsElement\n    >;\n    dfn: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    dialog: WithCalculationsAndRef<\n        JSXDialogElementInterface,\n        HTMLDialogElement\n    >;\n    div: WithCalculationsAndRef<JSXDivElementInterface, HTMLDivElement>;\n    dl: WithCalculationsAndRef<JSXDListElementInterface, HTMLDListElement>;\n    dt: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    em: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    embed: WithCalculationsAndRef<JSXEmbedElementInterface, HTMLEmbedElement>;\n    fieldset: WithCalculationsAndRef<\n        JSXFieldSetElementInterface,\n        HTMLFieldSetElement\n    >;\n    figcaption: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    figure: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    footer: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    form: WithCalculationsAndRef<JSXFormElementInterface, HTMLFormElement>;\n    h1: WithCalculationsAndRef<JSXHeadingElementInterface, HTMLHeadingElement>;\n    h2: WithCalculationsAndRef<JSXHeadingElementInterface, HTMLHeadingElement>;\n    h3: WithCalculationsAndRef<JSXHeadingElementInterface, HTMLHeadingElement>;\n    h4: WithCalculationsAndRef<JSXHeadingElementInterface, HTMLHeadingElement>;\n    h5: WithCalculationsAndRef<JSXHeadingElementInterface, HTMLHeadingElement>;\n    h6: WithCalculationsAndRef<JSXHeadingElementInterface, HTMLHeadingElement>;\n    head: WithCalculationsAndRef<JSXHeadElementInterface, HTMLHeadElement>;\n    header: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    hgroup: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    hr: WithCalculationsAndRef<JSXHRElementInterface, HTMLHRElement>;\n    html: WithCalculationsAndRef<JSXHtmlElementInterface, HTMLHtmlElement>;\n    i: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    iframe: WithCalculationsAndRef<\n        JSXIFrameElementInterface,\n        HTMLIFrameElement\n    >;\n    img: WithCalculationsAndRef<JSXImageElementInterface, HTMLImageElement>;\n    input: WithCalculationsAndRef<JSXInputElementInterface, HTMLInputElement>;\n    ins: WithCalculationsAndRef<JSXModElementInterface, HTMLModElement>;\n    kbd: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    label: WithCalculationsAndRef<JSXLabelElementInterface, HTMLLabelElement>;\n    legend: WithCalculationsAndRef<\n        JSXLegendElementInterface,\n        HTMLLegendElement\n    >;\n    li: WithCalculationsAndRef<JSXLIElementInterface, HTMLLIElement>;\n    link: WithCalculationsAndRef<JSXLinkElementInterface, HTMLLinkElement>;\n    main: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    map: WithCalculationsAndRef<JSXMapElementInterface, HTMLMapElement>;\n    mark: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    menu: WithCalculationsAndRef<JSXMenuElementInterface, HTMLMenuElement>;\n    meta: WithCalculationsAndRef<JSXMetaElementInterface, HTMLMetaElement>;\n    meter: WithCalculationsAndRef<JSXMeterElementInterface, HTMLMeterElement>;\n    nav: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    noscript: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    object: WithCalculationsAndRef<\n        JSXObjectElementInterface,\n        HTMLObjectElement\n    >;\n    ol: WithCalculationsAndRef<JSXOListElementInterface, HTMLOListElement>;\n    optgroup: WithCalculationsAndRef<\n        JSXOptGroupElementInterface,\n        HTMLOptGroupElement\n    >;\n    option: WithCalculationsAndRef<\n        JSXOptionElementInterface,\n        HTMLOptionElement\n    >;\n    output: WithCalculationsAndRef<\n        JSXOutputElementInterface,\n        HTMLOutputElement\n    >;\n    p: WithCalculationsAndRef<\n        JSXParagraphElementInterface,\n        HTMLParagraphElement\n    >;\n    param: WithCalculationsAndRef<JSXParamElementInterface, HTMLParamElement>;\n    picture: WithCalculationsAndRef<\n        JSXPictureElementInterface,\n        HTMLPictureElement\n    >;\n    pre: WithCalculationsAndRef<JSXPreElementInterface, HTMLPreElement>;\n    progress: WithCalculationsAndRef<\n        JSXProgressElementInterface,\n        HTMLProgressElement\n    >;\n    q: WithCalculationsAndRef<JSXQuoteElementInterface, HTMLQuoteElement>;\n    rp: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    rt: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    ruby: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    s: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    samp: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    script: WithCalculationsAndRef<\n        JSXScriptElementInterface,\n        HTMLScriptElement\n    >;\n    section: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    select: WithCalculationsAndRef<\n        JSXSelectElementInterface,\n        HTMLSelectElement\n    >;\n    slot: WithCalculationsAndRef<JSXSlotElementInterface, HTMLSlotElement>;\n    small: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    source: WithCalculationsAndRef<\n        JSXSourceElementInterface,\n        HTMLSourceElement\n    >;\n    span: WithCalculationsAndRef<JSXSpanElementInterface, HTMLSpanElement>;\n    strong: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    style: WithCalculationsAndRef<JSXStyleElementInterface, HTMLStyleElement>;\n    sub: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    summary: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    sup: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    table: WithCalculationsAndRef<JSXTableElementInterface, HTMLTableElement>;\n    tbody: WithCalculationsAndRef<\n        JSXTableSectionElementInterface,\n        HTMLTableSectionElement\n    >;\n    td: WithCalculationsAndRef<\n        JSXTableCellElementInterface,\n        HTMLTableCellElement\n    >;\n    template: WithCalculationsAndRef<\n        JSXTemplateElementInterface,\n        HTMLTemplateElement\n    >;\n    textarea: WithCalculationsAndRef<\n        JSXTextAreaElementInterface,\n        HTMLTextAreaElement\n    >;\n    tfoot: WithCalculationsAndRef<\n        JSXTableSectionElementInterface,\n        HTMLTableSectionElement\n    >;\n    th: WithCalculationsAndRef<\n        JSXTableCellElementInterface,\n        HTMLTableCellElement\n    >;\n    thead: WithCalculationsAndRef<\n        JSXTableSectionElementInterface,\n        HTMLTableSectionElement\n    >;\n    time: WithCalculationsAndRef<JSXTimeElementInterface, HTMLTimeElement>;\n    title: WithCalculationsAndRef<JSXTitleElementInterface, HTMLTitleElement>;\n    tr: WithCalculationsAndRef<\n        JSXTableRowElementInterface,\n        HTMLTableRowElement\n    >;\n    track: WithCalculationsAndRef<JSXTrackElementInterface, HTMLTrackElement>;\n    u: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    ul: WithCalculationsAndRef<JSXUListElementInterface, HTMLUListElement>;\n    var: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n    video: WithCalculationsAndRef<JSXVideoElementInterface, HTMLVideoElement>;\n    wbr: WithCalculationsAndRef<JSXElementInterface, HTMLElement>;\n}\n\ndeclare global {\n    // eslint-disable-next-line @typescript-eslint/no-namespace\n    namespace JSX {\n        interface IntrinsicElements extends KnownElements {\n            [unknownElement: string]: any;\n        }\n        type Element = JSXNode;\n    }\n}\n", "import { JSXNode } from './jsx';\nimport { groupBy } from './util';\nimport * as log from './log';\n\n/**\n * A VNode represents a node in the JSX tree structure\n *\n * Since a JSXNode may render to 0, 1, or many DOM nodes, we need to keep track\n * of the virtual tree structure to understand which index to update within the\n * DOM tree.\n */\nexport type ChildVNode = {\n    domNode: Node | null;\n    children: VNode[];\n    domParent: VNode;\n    mountFragment: DocumentFragment | null;\n    jsxNode: JSXNode | null;\n    onMount: Function[];\n    onUnmount: Function[];\n};\nexport type RootVNode = {\n    domNode: Node | null;\n    children: VNode[];\n    domParent: VNode;\n    mountFragment: DocumentFragment | null;\n    jsxNode: JSXNode | null;\n    onMount: Function[];\n    onUnmount: Function[];\n};\nexport type VNode = ChildVNode | RootVNode;\n\nexport function makeRootVNode({ domNode }: { domNode: Node }): RootVNode {\n    const rootVNode: RootVNode = {\n        domNode,\n        children: [],\n        domParent: null,\n        mountFragment: document.createDocumentFragment(),\n        jsxNode: null,\n        onMount: [],\n        onUnmount: [],\n    } as unknown as RootVNode; // We lie here since domParent needs to be self-referential\n    rootVNode.domParent = rootVNode;\n    return rootVNode;\n}\n\nexport function makeChildVNode({\n    jsxNode,\n    domNode,\n    domParent,\n    onMount,\n    onUnmount,\n}: {\n    domParent: VNode;\n    jsxNode: JSXNode | null;\n    domNode: Node | null;\n    onMount: Function[];\n    onUnmount: Function[];\n}): ChildVNode {\n    return {\n        domNode,\n        children: [],\n        domParent,\n        mountFragment: domNode ? document.createDocumentFragment() : null,\n        jsxNode,\n        onMount,\n        onUnmount,\n    };\n}\n\n/**\n * Get shallow DOM nodes from the virtual tree.\n *\n * For example, with this virtual tree:\n *\n * <root>\n *   <A>...</A>\n *   <B>\n *     <B1>\n *      <div id=\"b_1_1\">...</div>\n *      {false}\n *      {[\n *        <div id=\"b_1_arr_1\">...</div>\n *        <div id=\"b_1_arr_2\">...</div>\n *      ]}\n *      <SubComponent>\n *        <div id=\"b_1_sub_1\">...</div>\n *        <div id=\"b_1_sub_2\">...</div>\n *      </SubComponent>\n *      <div id=\"b_1_3\">...</div>\n *     </B1>\n *   </B>\n *   <C>\n *     ...\n *   </C>\n * </root>\n *\n * If getShallowNodes is called with <B> as the target, this would retrieve:\n * [b_1_1, b_1_arr_1, b_1_arr_2, b_1_sub_1, b_1_sub_2, b_1_3]\n */\nfunction getShallowNodes(vNode: VNode): Node[] {\n    const nodes: Node[] = [];\n    function visit(node: VNode) {\n        if (node.domNode) {\n            nodes.push(node.domNode);\n        } else {\n            node.children.forEach((child) => visit(child));\n        }\n    }\n    visit(vNode);\n    return nodes;\n}\n\nfunction getDomParentChildIndex(\n    domParent: VNode,\n    immediateParent: VNode,\n    childIndex: number\n): number {\n    let realIndex = 0;\n\n    function visit(node: VNode): boolean {\n        if (node.domNode) {\n            realIndex += 1;\n            return false;\n        } else {\n            return visitChildren(node);\n        }\n    }\n    function visitChildren(node: VNode): boolean {\n        const visitIndex =\n            node === immediateParent ? childIndex : node.children.length;\n        for (let i = 0; i < visitIndex; ++i) {\n            if (visit(node.children[i])) {\n                return true;\n            }\n        }\n        return node === immediateParent;\n    }\n    visitChildren(domParent);\n    return realIndex;\n}\n\nexport function callOnMount(node: VNode) {\n    // Note: we are doing a post-order traversal, so all children onMount are called before parents are called\n    node.children.forEach((child) => callOnMount(child));\n\n    // Call any onMount listeners\n    if (node.onMount) {\n        node.onMount.forEach((onMount) => {\n            try {\n                onMount();\n            } catch (e) {\n                log.exception(\n                    e,\n                    'VNode node raised exception in onMount',\n                    node\n                );\n            }\n        });\n    }\n}\n\nfunction callOnUnmount(node: VNode) {\n    // Note: we are doing a post-order traversal, so all children are released/unmounted before parents are released/unmounted\n    node.children.forEach((child) => callOnUnmount(child));\n\n    // Call any onUnmount listeners\n    if (node.onUnmount) {\n        node.onUnmount.forEach((onUnmount) => {\n            try {\n                onUnmount();\n            } catch (e) {\n                log.exception(\n                    e,\n                    'VNode node raised exception in onUnmount',\n                    node\n                );\n            }\n        });\n    }\n}\n\nexport function mountVNode(vNode: VNode) {\n    if (vNode.domNode && vNode.domParent.mountFragment) {\n        vNode.domParent.mountFragment.appendChild(vNode.domNode);\n    }\n}\n\nexport function spliceVNode(\n    immediateParent: VNode,\n    childIndex: number,\n    removeCount: number,\n    newNodes: VNode[],\n    { runOnMount = true, runOnUnmount = true } = {}\n) {\n    let domParent: VNode;\n    if (immediateParent.children[childIndex]) {\n        domParent = immediateParent.children[childIndex].domParent;\n    } else {\n        childIndex = immediateParent.children.length;\n        domParent = immediateParent.domNode\n            ? immediateParent\n            : immediateParent.domParent;\n    }\n    log.assert(\n        domParent,\n        'tried to replace a root tree slot with missing domParent'\n    );\n\n    const detachedVNodes = immediateParent.children.splice(\n        childIndex,\n        removeCount,\n        ...newNodes\n    );\n\n    // Remove nodes, optimizing for array replacement, where all nodes are completely removed via .replaceChildren()\n    const toRemove: [ParentNode, Node][] = [];\n    detachedVNodes.forEach((detachedVNode) => {\n        if (runOnUnmount) {\n            callOnUnmount(detachedVNode);\n        }\n\n        const nodesToRemove = getShallowNodes(detachedVNode);\n        nodesToRemove.forEach((node) => {\n            if (node.parentNode) {\n                toRemove.push([node.parentNode, node]);\n            }\n        });\n    });\n    const groupedToRemove = groupBy(toRemove, (item) => item);\n    groupedToRemove.forEach((childNodes, parentNode) => {\n        if (parentNode.childNodes.length === childNodes.length) {\n            parentNode.replaceChildren();\n        } else {\n            childNodes.forEach((child) => parentNode.removeChild(child));\n        }\n    });\n\n    if (!domParent.domNode) {\n        throw new Error('Invariant: domParent missing domNode');\n    }\n    const domParentNode = domParent.domNode;\n\n    // Insert nodes via fragment with a single DOM operation\n    if (newNodes.length > 0) {\n        const domIndex = getDomParentChildIndex(\n            domParent,\n            immediateParent,\n            childIndex\n        );\n        const referenceNode: Node | undefined =\n            domParentNode.childNodes[domIndex];\n\n        const fragment = document.createDocumentFragment();\n\n        for (let i = 0; i < newNodes.length; ++i) {\n            const newNode = newNodes[i];\n            newNode.domParent = domParent;\n            const nodesToAdd = getShallowNodes(newNode);\n            nodesToAdd.forEach((addNode) => {\n                fragment.appendChild(addNode);\n            });\n        }\n\n        domParentNode.insertBefore(fragment, referenceNode || null);\n        if (runOnMount) {\n            newNodes.forEach((newNode) => {\n                callOnMount(newNode);\n            });\n        }\n    }\n    return detachedVNodes;\n}\n", "import { effect, retain, release, untracked } from './calc';\nimport { debugNameFor } from './debug';\nimport {\n    Collection,\n    View,\n    Calculation,\n    Context,\n    isContext,\n    isCalculation,\n    isCollection,\n    isRef,\n    ObserveKey,\n    TypeTag,\n} from './types';\nimport * as log from './log';\nimport {\n    Component,\n    JSXNode,\n    isRenderComponent,\n    isRenderElement,\n    isRenderProvider,\n    getElementTypeMapping,\n} from './jsx';\nimport {\n    VNode,\n    ChildVNode,\n    mountVNode,\n    spliceVNode,\n    makeChildVNode,\n    makeRootVNode,\n    callOnMount,\n} from './vnode';\n\nexport function createElement(\n    Constructor: string,\n    props?: any,\n    ...children: JSXNode[]\n): JSXNode;\nexport function createElement<TContext>(\n    Constructor: Context<TContext>,\n    props: { value: TContext },\n    ...children: JSXNode[]\n): JSXNode;\nexport function createElement<Props extends {}>(\n    Constructor: Component<Props>,\n    props?: Props,\n    ...children: JSXNode[]\n): JSXNode;\nexport function createElement<Props extends {}>(\n    Constructor: Component<Props>,\n    props?: Props,\n    ...children: JSXNode[]\n): JSXNode;\nexport function createElement<TContext, Props extends {}>(\n    Constructor: string | Component<Props> | Context<TContext>,\n    props?: any | Props | { value: TContext },\n    ...children: JSXNode[]\n): JSXNode {\n    if (typeof Constructor === 'string') {\n        return {\n            [TypeTag]: 'element',\n            element: Constructor,\n            props,\n            children,\n        };\n    }\n    if (isContext(Constructor)) {\n        return {\n            [TypeTag]: 'provider',\n            context: Constructor,\n            value: props.value,\n            children,\n        };\n    }\n    return {\n        [TypeTag]: 'component',\n        component: Constructor as Component<Props>,\n        props,\n        children,\n    };\n}\n\nconst boundEvents = new WeakMap<Element, Record<string, (ev: Event) => void>>();\n\nfunction setAttributeValue(\n    elementType: string,\n    element: Element,\n    key: string,\n    value: unknown\n) {\n    if (key.startsWith('on:') && typeof value === 'function') {\n        const eventName = key.slice(3);\n        let attributes = boundEvents.get(element);\n        if (!attributes) {\n            attributes = {};\n            boundEvents.set(element, attributes);\n        }\n        if (attributes[key]) {\n            element.removeEventListener(eventName, attributes[key]);\n        }\n        element.addEventListener(eventName, value as any);\n        attributes[key] = value as any;\n    } else {\n        const mapping = getElementTypeMapping(elementType, key);\n        if (mapping) {\n            if (mapping.makeAttrValue) {\n                const attributeValue = mapping.makeAttrValue(value);\n                if (attributeValue === undefined) {\n                    element.removeAttribute(key);\n                } else {\n                    element.setAttribute(key, attributeValue);\n                }\n            }\n            if (mapping.idlName && mapping.makeIdlValue) {\n                (element as any)[mapping.idlName] = mapping.makeIdlValue(value);\n            }\n        } else if (value === false || value === undefined || value === null) {\n            element.removeAttribute(key);\n        } else if (value === true) {\n            element.setAttribute(key, '');\n        } else if (typeof value === 'string') {\n            element.setAttribute(key, value);\n        }\n    }\n}\n\nfunction jsxNodeToVNode({\n    domParent,\n    jsxNode,\n    contextMap,\n}: {\n    domParent: VNode;\n    jsxNode: JSXNode;\n    contextMap: Map<Context<any>, any>;\n}): ChildVNode {\n    if (\n        jsxNode === null ||\n        jsxNode === undefined ||\n        jsxNode === false ||\n        jsxNode === true\n    ) {\n        const emptyVNode = makeChildVNode({\n            domParent: domParent,\n            jsxNode: jsxNode,\n            domNode: null,\n            onMount: [],\n            onUnmount: [],\n        });\n        mountVNode(emptyVNode);\n        return emptyVNode;\n    }\n    if (typeof jsxNode === 'string') {\n        const stringVNode = makeChildVNode({\n            domParent: domParent,\n            jsxNode: jsxNode,\n            domNode: document.createTextNode(jsxNode),\n            onMount: [],\n            onUnmount: [],\n        });\n        mountVNode(stringVNode);\n        return stringVNode;\n    }\n    if (typeof jsxNode === 'number') {\n        const numberVNode = makeChildVNode({\n            domParent: domParent,\n            jsxNode: jsxNode,\n            domNode: document.createTextNode(jsxNode.toString()),\n            onMount: [],\n            onUnmount: [],\n        });\n        mountVNode(numberVNode);\n        return numberVNode;\n    }\n    if (isRenderElement(jsxNode)) {\n        const element = document.createElement(jsxNode.element);\n\n        const boundEffects: Calculation<any>[] = [];\n        let refCallback: any = undefined;\n\n        // Bind props\n        if (jsxNode.props) {\n            Object.entries(jsxNode.props).forEach(([key, value]) => {\n                if (key === 'ref') {\n                    if (isRef(value)) {\n                        value.current = element;\n                        return;\n                    }\n                    if (typeof value === 'function' && !isCalculation(value)) {\n                        refCallback = value;\n                        return;\n                    }\n                }\n                if (isCalculation(value)) {\n                    const boundEffect = effect(() => {\n                        const computedValue = value();\n                        setAttributeValue(\n                            jsxNode.element,\n                            element,\n                            key,\n                            computedValue\n                        );\n                    }, `viewattr:${key}`);\n                    retain(boundEffect);\n                    boundEffects.push(boundEffect);\n                    boundEffect();\n                } else {\n                    setAttributeValue(jsxNode.element, element, key, value);\n                }\n            });\n        }\n\n        const elementNode = makeChildVNode({\n            domParent: domParent,\n            jsxNode: jsxNode,\n            domNode: element,\n            onMount: [\n                () => {\n                    if (refCallback) {\n                        refCallback(element);\n                    }\n                },\n            ],\n            onUnmount: [\n                () => {\n                    boundEffects.forEach((boundEffect) => release(boundEffect));\n                    if (refCallback) {\n                        refCallback(undefined);\n                    }\n                },\n            ],\n        });\n        elementNode.children = jsxNode.children.map((childJsxNode) =>\n            jsxNodeToVNode({\n                domParent: elementNode,\n                jsxNode: childJsxNode,\n                contextMap,\n            })\n        );\n\n        // Mount self\n        if (elementNode.mountFragment) {\n            element.appendChild(elementNode.mountFragment);\n            elementNode.mountFragment = null;\n        }\n        mountVNode(elementNode);\n\n        return elementNode;\n    }\n    if (isCollection(jsxNode)) {\n        const trackedCollection: Collection<any> | View<any> = jsxNode;\n        const onUnmount: (() => void)[] = [];\n\n        const collectionNode = makeChildVNode({\n            domParent: domParent,\n            jsxNode: jsxNode,\n            domNode: null,\n            onMount: [],\n            onUnmount,\n        });\n\n        untracked(() => {\n            collectionNode.children.push(\n                ...trackedCollection.map((jsxChild) =>\n                    jsxNodeToVNode({\n                        domParent: collectionNode.domParent,\n                        jsxNode: jsxChild,\n                        contextMap,\n                    })\n                )\n            );\n        });\n\n        const unobserve = trackedCollection[ObserveKey]((event) => {\n            if (event.type === 'splice') {\n                untracked(() => {\n                    const { count, index, items } = event;\n                    const childNodes = items.map((jsxChild) =>\n                        jsxNodeToVNode({\n                            domParent: collectionNode.domParent,\n                            jsxNode: jsxChild,\n                            contextMap,\n                        })\n                    );\n                    spliceVNode(collectionNode, index, count, childNodes);\n                });\n            } else if (event.type === 'move') {\n                const { fromIndex, fromCount, toIndex } = event;\n                const moved = spliceVNode(\n                    collectionNode,\n                    fromIndex,\n                    fromCount,\n                    [],\n                    { runOnUnmount: false }\n                );\n                spliceVNode(\n                    collectionNode,\n                    fromIndex < toIndex ? toIndex - fromCount : toIndex,\n                    0,\n                    moved,\n                    { runOnMount: false }\n                );\n            } else if (event.type === 'sort') {\n                const { indexes } = event;\n                const removedVNodes = spliceVNode(\n                    collectionNode,\n                    0,\n                    indexes.length,\n                    [],\n                    { runOnUnmount: false }\n                );\n                const sortedVNodes = indexes.map(\n                    (newIndex) => removedVNodes[newIndex]\n                );\n                spliceVNode(collectionNode, 0, 0, sortedVNodes, {\n                    runOnMount: false,\n                });\n            } else {\n                log.assertExhausted(event, 'unhandled collection event');\n            }\n        });\n\n        retain(trackedCollection);\n        onUnmount.push(unobserve);\n        onUnmount.push(() => {\n            release(trackedCollection);\n        });\n\n        // Mount self\n        mountVNode(collectionNode);\n\n        return collectionNode;\n    }\n    if (isCalculation(jsxNode)) {\n        const trackedCalculation = jsxNode;\n        const onUnmount: Function[] = [];\n        const calculationNode = makeChildVNode({\n            domParent: domParent,\n            jsxNode: jsxNode,\n            domNode: null,\n            onMount: [],\n            onUnmount,\n        });\n\n        let firstRun = true;\n        const resultEffect = effect(() => {\n            const jsxChild = trackedCalculation();\n            const childVNode = jsxNodeToVNode({\n                domParent: calculationNode.domParent,\n                jsxNode: jsxChild,\n                contextMap,\n            });\n            if (firstRun) {\n                firstRun = false;\n                calculationNode.children.push(childVNode);\n            } else {\n                spliceVNode(\n                    calculationNode,\n                    0,\n                    calculationNode.children.length,\n                    [childVNode]\n                );\n            }\n        }, `viewcalc:${debugNameFor(jsxNode) ?? 'node'}`);\n\n        retain(resultEffect);\n        onUnmount.push(() => release(resultEffect));\n\n        resultEffect();\n\n        // Mount self\n        mountVNode(calculationNode);\n\n        return calculationNode;\n    }\n    if (isRenderProvider(jsxNode)) {\n        const renderProvider = jsxNode;\n        const providerNode = makeChildVNode({\n            domParent: domParent,\n            jsxNode,\n            domNode: null,\n            onMount: [],\n            onUnmount: [],\n        });\n\n        const subMap = new Map(contextMap);\n        subMap.set(renderProvider.context, renderProvider.value);\n\n        providerNode.children.push(\n            ...renderProvider.children.map((jsxChild) =>\n                jsxNodeToVNode({\n                    domParent: domParent,\n                    jsxNode: jsxChild,\n                    contextMap: subMap,\n                })\n            )\n        );\n\n        // Mount self\n        mountVNode(providerNode);\n\n        return providerNode;\n    }\n    if (isRenderComponent(jsxNode)) {\n        const onUnmount: Function[] = [];\n\n        const componentNode = makeChildVNode({\n            domParent: domParent,\n            jsxNode: jsxNode,\n            domNode: null,\n            onMount: [],\n            onUnmount,\n        });\n\n        const Component = jsxNode.component;\n        const onComponentMount: Function[] = [];\n        const jsxChild = Component(\n            {\n                ...(jsxNode.props || {}),\n                children: jsxNode.children,\n            },\n            {\n                onUnmount: (unmountCallback) => {\n                    onUnmount.push(unmountCallback);\n                },\n                onMount: (mountCallback) => {\n                    onComponentMount.push(mountCallback);\n                },\n                onEffect: (effectCallback: () => void, debugName?: string) => {\n                    const effectCalc = effect(\n                        effectCallback,\n                        `componenteffect:${jsxNode.component.name}:${\n                            debugName ?? onComponentMount.length\n                        }`\n                    );\n                    onComponentMount.push(() => {\n                        retain(effectCalc);\n                        effectCalc();\n                    });\n                    onUnmount.push(() => {\n                        release(effectCalc);\n                    });\n                },\n                getContext: <TVal>(context: Context<TVal>): TVal => {\n                    if (contextMap.has(context)) {\n                        return contextMap.get(context);\n                    }\n                    return context();\n                },\n            }\n        );\n\n        const childVNode = jsxNodeToVNode({\n            domParent: componentNode.domParent,\n            jsxNode: jsxChild,\n            contextMap,\n        });\n        componentNode.children.push(childVNode);\n\n        onComponentMount.forEach((mountCallback) =>\n            componentNode.onMount.push(mountCallback)\n        );\n\n        // Mount self\n        mountVNode(componentNode);\n\n        return componentNode;\n    }\n    if (Array.isArray(jsxNode)) {\n        const items = jsxNode;\n        const arrayNode = makeChildVNode({\n            domParent: domParent,\n            jsxNode,\n            domNode: null,\n            onMount: [],\n            onUnmount: [],\n        });\n\n        arrayNode.children.push(\n            ...items.map((jsxChild) =>\n                jsxNodeToVNode({\n                    domParent: domParent,\n                    jsxNode: jsxChild,\n                    contextMap,\n                })\n            )\n        );\n\n        // Mount self\n        mountVNode(arrayNode);\n\n        return arrayNode;\n    }\n    if (typeof jsxNode === 'function') {\n        const functionVNode = makeChildVNode({\n            domParent: domParent,\n            jsxNode: jsxNode,\n            domNode: null,\n            onMount: [],\n            onUnmount: [],\n        });\n        log.warn(\n            'Attempted to render JSX node that was a function, not rendering anything'\n        );\n\n        // Mount self\n        mountVNode(functionVNode);\n\n        return functionVNode;\n    }\n    log.assertExhausted(jsxNode, 'unexpected render type');\n}\n\n/**\n * Mount the provided JSX to an element\n */\nexport function mount(parentElement: Element, jsxNode: JSXNode) {\n    const rootNode = makeRootVNode({ domNode: parentElement });\n    rootNode.children.push(\n        jsxNodeToVNode({\n            domParent: rootNode,\n            jsxNode: jsxNode,\n            contextMap: new Map(),\n        })\n    );\n\n    // Mount self\n    if (rootNode.mountFragment) {\n        parentElement.appendChild(rootNode.mountFragment);\n        rootNode.mountFragment = null;\n    }\n\n    // Call onMount callbacks\n    callOnMount(rootNode);\n\n    return () => {\n        spliceVNode(rootNode, 0, rootNode.children.length, []);\n    };\n}\n\nexport const Fragment = ({ children }: { children: JSXNode[] }) => children;\n", "import {\n    Collection,\n    FilterFunction,\n    FlatMapFunction,\n    InvariantError,\n    MappingFunction,\n    View,\n    NotifyKey,\n} from './types';\nimport * as log from './log';\nimport { trackedData } from './trackeddata';\n\n// https://tc39.es/ecma262/multipage/indexed-collections.html#sec-sortcompare\nfunction defaultSort(x: any, y: any) {\n    if (x === undefined && y === undefined) return 0;\n    if (x === undefined) return 1;\n    if (y === undefined) return -1;\n    const xStr = '' + x;\n    const yStr = '' + y;\n    if (xStr < yStr) return -1;\n    if (xStr > yStr) return 1;\n    return 0;\n}\n\n/**\n * Make a mutable array to hold state, with some additional convenience methods\n */\nexport function collection<T>(array: T[], debugName?: string): Collection<T> {\n    if (!Array.isArray(array)) {\n        throw new InvariantError('collection must be provided an array');\n    }\n\n    return trackedData(\n        array,\n        'collection' as const,\n        {\n            get(notify, target, key) {\n                return target[key];\n            },\n\n            has(notify, target, key) {\n                return key in target;\n            },\n\n            set(this: Collection<T>, notify, target, key, value) {\n                if (\n                    key === 'length' &&\n                    typeof value === 'number' &&\n                    value < target.length\n                ) {\n                    // Special handling of resizing length smaller than normal length to handle removing of items\n                    this.splice(value, target.length - value);\n                    return true;\n                }\n                const numericKey = Number(key);\n                if (!isNaN(numericKey) && numericKey <= array.length) {\n                    this.splice(numericKey, 1, value);\n                } else {\n                    target[key] = value;\n                }\n                return true;\n            },\n\n            deleteProperty(notify, target, key) {\n                delete target[key];\n                return true;\n            },\n        },\n        ({\n            notify,\n            subscriptionNode,\n            makeView,\n            observe,\n            addDeferredWork,\n            processFieldChange,\n            removeSubscriptionField,\n        }) => ({\n            splice: function splice(\n                index: number,\n                count: number,\n                ...items: T[]\n            ): T[] {\n                if (count < 1 && items.length === 0) return []; // noop\n                const origLength = array.length;\n                const removed = array.splice(index, count, ...items);\n                const newLength = array.length;\n                notify({\n                    type: 'splice',\n                    index,\n                    count,\n                    items,\n                    removed,\n                });\n\n                // Cases to consider:\n                // 1. count === items.length: we are replacing count items\n                // 2. count > items.length: we are adding (count - items.length items), notify index to new end\n                // 3. count < items.length: we are removing (items.length - count items), notify index to old end\n\n                // Process changes in *added* items\n                if (origLength === newLength) {\n                    for (let i = index; i < index + count; ++i) {\n                        processFieldChange(i.toString());\n                    }\n                } else {\n                    for (\n                        let i = index;\n                        i < Math.max(newLength, origLength);\n                        ++i\n                    ) {\n                        const key = i.toString();\n                        processFieldChange(key);\n                        if (i >= newLength) {\n                            removeSubscriptionField(key);\n                        }\n                    }\n                    processFieldChange('length');\n                }\n                return removed;\n            },\n            pop: function pop(this: Collection<T>): T | undefined {\n                const removed = this.splice(array.length - 1, 1);\n                return removed[0];\n            },\n            shift: function shift(this: Collection<T>): T | undefined {\n                const removed = this.splice(0, 1);\n                return removed[0];\n            },\n            push: function push(this: Collection<T>, ...items: T[]): number {\n                this.splice(array.length, 0, ...items);\n                return array.length;\n            },\n            unshift: function unshift(\n                this: Collection<T>,\n                ...items: T[]\n            ): number {\n                this.splice(0, 0, ...items);\n                return array.length;\n            },\n            reject: function reject(\n                this: Collection<T>,\n                func: (item: T, index: number) => boolean\n            ) {\n                for (let i = array.length - 1; i >= 0; --i) {\n                    if (func(this[i], i)) {\n                        this.splice(i, 1);\n                    }\n                }\n            },\n            moveSlice: function moveSlice(\n                this: Collection<T>,\n                fromIndex: number,\n                fromCount: number,\n                toIndex: number\n            ) {\n                if (fromCount <= 0) return; // nothing to slice\n                if (toIndex >= fromIndex && toIndex < fromIndex + fromCount)\n                    return; // destination is inside moved slice, so noop\n                const moved = array.splice(fromIndex, fromCount);\n                if (toIndex < fromIndex) {\n                    array.splice(toIndex, 0, ...moved);\n                } else {\n                    array.splice(toIndex - fromCount, 0, ...moved);\n                }\n                notify({\n                    type: 'move',\n                    fromIndex,\n                    fromCount,\n                    toIndex,\n                    moved,\n                });\n            },\n            sort: function sort(\n                this: Collection<T>,\n                sorter: (a: T, b: T) => number = defaultSort\n            ): T[] {\n                const arrayWithIndexes: [T, number][] = array.map(\n                    (item, index) => [item, index]\n                );\n                array.sort(sorter);\n                arrayWithIndexes.sort((ai, bi) => sorter(ai[0], bi[0]));\n                notify({\n                    type: 'sort',\n                    indexes: arrayWithIndexes.map((pair) => pair[1]),\n                });\n                return this;\n            },\n            reverse: function reverse(\n                this: Collection<T>,\n                sorter: (a: T, b: T) => number = defaultSort\n            ): T[] {\n                if (array.length === 0) return this;\n                array.reverse();\n                // Simulate a resort\n                const indexes: number[] = [];\n                for (let i = array.length - 1; i >= 0; --i) {\n                    indexes.push(i);\n                }\n                notify({\n                    type: 'sort',\n                    indexes,\n                });\n                return this;\n            },\n            makeView,\n            mapView: function mapView<V>(\n                this: Collection<T>,\n                mapper: MappingFunction<T, V>,\n                debugName?: string | undefined\n            ) {\n                return mapViewImplementation(this, mapper, debugName);\n            },\n            filterView: function filterView(\n                this: Collection<T>,\n                filterFn: FilterFunction<T>,\n                debugName?: string\n            ) {\n                return filterViewImplementation(this, filterFn, debugName);\n            },\n            flatMapView: function flatMapView<V>(\n                this: Collection<T>,\n                fn: FlatMapFunction<T, V>,\n                debugName?: string | undefined\n            ) {\n                return flatMapViewImplementation(this, fn, debugName);\n            },\n        }),\n        debugName\n    );\n}\n\nfunction mapViewImplementation<T, V>(\n    sourceCollection: Collection<T> | View<T>,\n    mapper: MappingFunction<T, V>,\n    debugName?: string | undefined\n): View<V> {\n    // map is a specialization of flatMap\n    return flatMapViewImplementation(\n        sourceCollection,\n        (item) => [mapper(item)],\n        debugName\n    );\n}\n\nfunction filterViewImplementation<T>(\n    sourceCollection: Collection<T> | View<T>,\n    filterFn: FilterFunction<T>,\n    debugName?: string\n): View<T> {\n    // filter is a specialization of flatMap\n    return flatMapViewImplementation(\n        sourceCollection,\n        (item) => (filterFn(item) ? [item] : []),\n        debugName\n    );\n}\n\nfunction flatMapViewImplementation<T, V>(\n    sourceCollection: Collection<T> | View<T>,\n    fn: FlatMapFunction<T, V>,\n    debugName?: string | undefined\n): View<V> {\n    const flatMapCount: number[] = [];\n\n    return sourceCollection.makeView(\n        {\n            initialize: (items) => {\n                const flatMapItems: V[] = [];\n                items.forEach((value) => {\n                    const chunk = fn(value);\n                    flatMapItems.push(...chunk);\n                    flatMapCount.push(chunk.length);\n                });\n                return flatMapItems;\n            },\n            processEvent: (view, event, rawArray) => {\n                if (event.type === 'splice') {\n                    const { index, count, items } = event;\n                    let realIndex = 0;\n                    for (let i = 0; i < index; ++i) {\n                        realIndex += flatMapCount[i];\n                    }\n                    let realCount = 0;\n                    for (let i = index; i < index + count; ++i) {\n                        realCount += flatMapCount[i];\n                    }\n                    // Well that's deceptively easy\n                    const realItems: V[] = [];\n                    const realItemCount: number[] = [];\n                    items.forEach((itemValue) => {\n                        const chunk = fn(itemValue);\n                        realItems.push(...chunk);\n                        realItemCount.push(chunk.length);\n                    });\n                    view.splice(realIndex, realCount, ...realItems);\n                    flatMapCount.splice(index, count, ...realItemCount);\n                } else if (event.type === 'move') {\n                    const { fromIndex, fromCount, toIndex } = event;\n                    let realFromCount = 0;\n                    for (let i = fromIndex; i < fromIndex + fromCount; ++i) {\n                        realFromCount += flatMapCount[i];\n                    }\n\n                    if (realFromCount > 0) {\n                        let realFromIndex = 0;\n                        let realToIndex = 0;\n\n                        const lastIndex = Math.max(fromIndex, toIndex);\n                        let count = 0;\n                        for (let i = 0; i <= lastIndex; ++i) {\n                            if (i === fromIndex) realFromIndex = count;\n                            if (i === toIndex) realToIndex = count;\n                            count += flatMapCount[i];\n                        }\n                        view.moveSlice(\n                            realFromIndex,\n                            realFromCount,\n                            realToIndex\n                        );\n                    }\n                    flatMapCount.splice(\n                        toIndex,\n                        0,\n                        ...flatMapCount.splice(fromIndex, fromCount)\n                    );\n                } else if (event.type === 'sort') {\n                    const { indexes } = event;\n\n                    const flatMapIndexes: number[] = [];\n                    let accumulatorIndex = 0;\n                    for (let i = 0; i < flatMapCount.length; ++i) {\n                        flatMapIndexes.push(accumulatorIndex);\n                        accumulatorIndex += flatMapCount[i];\n                    }\n\n                    const copiedSource = rawArray.slice();\n                    const newIndexes: number[] = [];\n                    let destIndex = 0;\n                    indexes.forEach((sourceIndex) => {\n                        const realCount = flatMapCount[sourceIndex];\n                        if (realCount === 0) return;\n                        const realIndex = flatMapIndexes[sourceIndex];\n                        for (let i = 0; i < realCount; ++i) {\n                            newIndexes.push(realIndex + i);\n                            rawArray[destIndex] = copiedSource[realIndex + i];\n                            destIndex += 1;\n                        }\n                    });\n\n                    view[NotifyKey]({\n                        type: 'sort',\n                        indexes: newIndexes,\n                    });\n                } else {\n                    log.assertExhausted(\n                        event,\n                        'unhandled collection event type'\n                    );\n                }\n            },\n        },\n        debugName\n    );\n}\n", "import {\n    Collection,\n    Subscription,\n    ViewSpec,\n    AddDeferredWorkKey,\n    FlushKey,\n    ObserveKey,\n    NotifyKey,\n    TypeTag,\n    DataTypeTag,\n    ModelField,\n    TrackedData,\n} from './types';\nimport { collection } from './collection';\nimport {\n    untracked,\n    addManualDep,\n    removeManualDep,\n    addDepToCurrentCalculation,\n    processChange,\n} from './calc';\nimport { name } from './debug';\nimport * as log from './log';\n\ninterface DataImplementation<TEvent> {\n    get(\n        notify: (event: TEvent) => void,\n        target: any,\n        key: string | symbol\n    ): any;\n\n    has(\n        notify: (event: TEvent) => void,\n        target: any,\n        key: string | symbol\n    ): boolean;\n\n    set(\n        notify: (event: TEvent) => void,\n        target: any,\n        key: string | symbol,\n        value: any\n    ): boolean;\n\n    deleteProperty(\n        notify: (event: TEvent) => void,\n        target: any,\n        key: string | symbol\n    ): boolean;\n}\n\nexport function trackedData<\n    TDataTypeTag,\n    TData extends object,\n    TEvent,\n    TMethods extends object\n>(\n    initialValue: TData,\n    typeTag: TDataTypeTag,\n    implSpec: DataImplementation<TEvent>,\n    bindMethods: (bindSpec: {\n        addDeferredWork: (task: () => void) => void;\n        notify: (event: TEvent) => void;\n        observe: (observer: (event: TEvent) => void) => () => void;\n        makeView: <V>(\n            spec: ViewSpec<TData, V, TEvent>,\n            viewDebugName?: string | undefined\n        ) => Collection<V>;\n        subscriptionNode: Subscription;\n        processFieldChange: (field: string | symbol) => void;\n        removeSubscriptionField: (field: string | symbol) => void;\n    }) => TMethods,\n    debugName?: string\n): TrackedData<TData & TMethods, TDataTypeTag, TEvent> {\n    const fields: Map<string | number | symbol, ModelField> = new Map();\n\n    let observers: ((event: TEvent) => void)[] = [];\n\n    let deferredTasks: (() => void)[] = [];\n\n    const subscriptionNode: Subscription = {\n        [TypeTag]: 'subscription',\n    };\n    name(subscriptionNode, `${debugName || '?'}:sub`);\n\n    function addDeferredWork(task: () => void) {\n        deferredTasks.push(task);\n        processChange(proxy);\n    }\n\n    function flush() {\n        const toProcess = deferredTasks;\n        deferredTasks = [];\n        toProcess.forEach((task) => {\n            task();\n        });\n    }\n\n    function notify(event: TEvent) {\n        observers.forEach((observer) => {\n            observer(event);\n        });\n    }\n\n    function observe(observer: (event: TEvent) => void) {\n        if (observers.length === 0) {\n            // Initialize the subscription node so events are ordered correctly\n            fields.forEach((field) => {\n                addManualDep(field, subscriptionNode);\n            });\n        }\n        observers.push(observer);\n        return () => {\n            observers = observers.filter((obs) => obs !== observer);\n            if (observers.length === 0) {\n                // Deinitialize the subscription node so events are ordered correctly\n                fields.forEach((field) => {\n                    removeManualDep(field, subscriptionNode);\n                });\n            }\n        };\n    }\n\n    function makeView<V>(\n        spec: ViewSpec<TData, V, TEvent>,\n        viewDebugName?: string | undefined\n    ) {\n        const viewArray: V[] = untracked(() => spec.initialize(initialValue));\n        const view = collection(viewArray, viewDebugName);\n        observe((event: TEvent) => {\n            view[AddDeferredWorkKey](() =>\n                spec.processEvent(view, event, viewArray)\n            );\n        });\n        addManualDep(proxy, view);\n        addManualDep(subscriptionNode, view);\n        return view;\n    }\n\n    function processFieldChange(key: string | symbol) {\n        const field = getField(key);\n        processChange(field);\n    }\n\n    function removeSubscriptionField(key: string | symbol) {\n        if (observers.length > 0) {\n            const field = getField(key);\n            removeManualDep(field, subscriptionNode);\n        }\n    }\n\n    const pseudoPrototype = {\n        [TypeTag]: 'data',\n        [DataTypeTag]: typeTag,\n        [FlushKey]: flush,\n        [AddDeferredWorkKey]: addDeferredWork,\n        [ObserveKey]: observe,\n        [NotifyKey]: notify,\n        ...bindMethods({\n            addDeferredWork,\n            observe,\n            notify,\n            makeView,\n            subscriptionNode,\n            processFieldChange,\n            removeSubscriptionField,\n        }),\n    };\n\n    function getField(key: string | number | symbol) {\n        let field: ModelField | undefined = fields.get(key);\n        if (!field) {\n            field = {\n                model: proxy as any,\n                key,\n            };\n            if (debugName) name(field, debugName);\n            fields.set(key, field);\n            addManualDep(proxy, field);\n            if (observers.length > 0) {\n                addManualDep(field, subscriptionNode);\n            }\n        }\n        return field;\n    }\n\n    const proxy: TrackedData<TData & TMethods, TDataTypeTag, TEvent> =\n        new Proxy(initialValue, {\n            get(target: any, key: string | symbol) {\n                if (key in pseudoPrototype) {\n                    return (pseudoPrototype as any)[key];\n                }\n                const field = getField(key);\n                addDepToCurrentCalculation(field);\n                return implSpec.get.call(proxy, notify, target, key);\n            },\n\n            has(target: any, key: string | symbol) {\n                if (key in pseudoPrototype) {\n                    return true;\n                }\n                const field = getField(key);\n                addDepToCurrentCalculation(field);\n                return implSpec.has.call(proxy, notify, target, key);\n            },\n\n            set(target: any, key: string | symbol, value: any) {\n                if (key in pseudoPrototype) {\n                    log.error(`Overriding ${String(key)} not supported`, key);\n                    return false;\n                }\n                const changed = implSpec.set.call(\n                    proxy,\n                    notify,\n                    target,\n                    key,\n                    value\n                );\n                if (changed) {\n                    const field = getField(key);\n                    processChange(field);\n                }\n                return changed;\n            },\n\n            deleteProperty(target: any, key: string | symbol) {\n                if (key in pseudoPrototype) {\n                    log.error(`Deleting ${String(key)} not supported`, key);\n                    return false;\n                }\n                const changed = implSpec.deleteProperty.call(\n                    proxy,\n                    notify,\n                    target,\n                    key\n                );\n                if (changed) {\n                    const field = getField(key);\n                    processChange(field); // Anything depending on this value will need to be recalculated\n                    if (observers.length > 0) {\n                        removeManualDep(field, subscriptionNode);\n                    }\n                }\n                return changed;\n            },\n        });\n\n    if (debugName) name(proxy, debugName);\n\n    return proxy;\n}\n", "import {\n    AddDeferredWorkKey,\n    InvariantError,\n    MakeModelViewKey,\n    Model,\n    ModelEvent,\n    View,\n    ViewSpec,\n} from './types';\nimport { trackedData } from './trackeddata';\nimport { collection } from './collection';\nimport { untracked, addManualDep } from './calc';\n\nexport function model<T extends {}>(obj: T, debugName?: string): Model<T> {\n    if (typeof obj !== 'object' || !obj) {\n        throw new InvariantError('model must be provided an object');\n    }\n\n    const knownFields: Set<string | number | symbol> = new Set(\n        Object.keys(obj)\n    );\n\n    return trackedData(\n        obj,\n        'model' as const,\n        {\n            get: (_notify, target, key) => {\n                return target[key];\n            },\n            has: (notify, target, key) => {\n                return knownFields.has(key);\n            },\n            set: (notify, target, key, value) => {\n                const changed = !knownFields.has(key) || target[key] !== value;\n                target[key] = value;\n                if (changed) {\n                    if (!knownFields.has(key)) {\n                        knownFields.add(key);\n                        notify({ type: 'add', key });\n                    }\n                    notify({ type: 'set', key, value });\n                }\n                return true;\n            },\n            deleteProperty: (notify, target, key) => {\n                const changed = knownFields.has(key);\n                delete target[key];\n                if (changed) {\n                    knownFields.delete(key);\n                    notify({ type: 'delete', key });\n                }\n                return true;\n            },\n        },\n        ({ addDeferredWork, makeView, notify, observe, subscriptionNode }) => {\n            return {\n                [MakeModelViewKey]: function makeModelView<V>(\n                    spec: ViewSpec<T, V, ModelEvent>,\n                    viewDebugName?: string | undefined\n                ) {\n                    const viewArray: V[] = untracked(() =>\n                        spec.initialize(obj)\n                    );\n                    const view = collection(viewArray, viewDebugName);\n                    observe((event: ModelEvent) => {\n                        view[AddDeferredWorkKey](() =>\n                            spec.processEvent(view, event, viewArray)\n                        );\n                    });\n                    addManualDep(subscriptionNode, view);\n                    return view;\n                },\n            };\n        },\n        debugName\n    );\n}\nmodel.keys = function keys<T>(\n    target: Model<T>,\n    debugName?: string\n): View<string> {\n    const keysSet = new Set<string>();\n\n    const view = target[MakeModelViewKey]<string>(\n        {\n            initialize: (obj) => {\n                const keys = Object.keys(obj);\n                keys.forEach((key) => keysSet.add(key));\n                return keys;\n            },\n            processEvent: (modelView, event) => {\n                if (event.type === 'add') {\n                    const { key } = event;\n                    if (typeof key === 'number' || typeof key === 'string') {\n                        const stringKey = key.toString();\n                        if (!keysSet.has(stringKey)) {\n                            keysSet.add(stringKey);\n                            modelView.push(stringKey);\n                        }\n                    }\n                } else if (event.type === 'delete') {\n                    const { key } = event;\n                    if (typeof key === 'number' || typeof key === 'string') {\n                        const stringKey = key.toString();\n                        if (keysSet.has(stringKey)) {\n                            keysSet.delete(stringKey);\n                            modelView.reject((k) => k === stringKey);\n                        }\n                    }\n                }\n            },\n        },\n        debugName\n    );\n\n    return view;\n};\n", "export { getLogLevel, setLogLevel } from './log';\nexport type { LogLevel } from './log';\nimport { createElement } from './view';\nexport { Fragment, mount } from './view';\nexport type { Component } from './jsx';\nexport { model } from './model';\nexport { collection } from './collection';\nexport {\n    calc,\n    effect,\n    reset,\n    subscribe,\n    flush,\n    nextFlush,\n    retain,\n    release,\n    debug,\n} from './calc';\n\nexport type {\n    Ref,\n    Calculation,\n    Collection,\n    View,\n    Model,\n    Context,\n} from './types';\nexport { ref, createContext, InvariantError } from './types';\n\nexport default createElement;\n\nexport const VERSION = LIB_VERSION;\n"],
  "mappings": "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",
  "names": []
}
